WITH SPAIDEN as
(
  SELECT
      SPRIDEN.SPRIDEN_PIDM,
      SPRIDEN.SPRIDEN_ID,
      SPRIDEN.SPRIDEN_LAST_NAME,
      SPRIDEN.SPRIDEN_FIRST_NAME,
      SPRIDEN.SPRIDEN_MI,
      SPRIDEN.SPRIDEN_CHANGE_IND,
      SPRIDEN.SPRIDEN_ENTITY_IND,
      SPRIDEN.SPRIDEN_SEARCH_LAST_NAME,
      SPRIDEN.SPRIDEN_SEARCH_FIRST_NAME,
      SPRIDEN.SPRIDEN_SEARCH_MI,
      SPRIDEN.SPRIDEN_SURROGATE_ID,
      SPRIDEN.SPRIDEN_VERSION,
      f_format_name(SPRIDEN.SPRIDEN_PIDM, 'LFMI') as SPRIDEN_LEGAL_NAME

  FROM
      SPRIDEN SPRIDEN

  WHERE
      SPRIDEN.SPRIDEN_NTYP_CODE is NULL
      AND SPRIDEN.SPRIDEN_CHANGE_IND is NULL
  ),

-- GLOBAL ADDRESSBOOK
TUIADDR as
(
  SELECT
      SPRADDR.SPRADDR_PIDM,
      SPRADDR.SPRADDR_ATYP_CODE,
      SPRADDR.SPRADDR_SEQNO,
      SPRADDR.SPRADDR_FROM_DATE,
      SPRADDR.SPRADDR_TO_DATE,
      SPRADDR.SPRADDR_STREET_LINE1,
      SPRADDR.SPRADDR_STREET_LINE2,
      SPRADDR.SPRADDR_STREET_LINE3,
      SPRADDR.SPRADDR_CITY,
      SPRADDR.SPRADDR_STAT_CODE,
      SPRADDR.SPRADDR_ZIP,
      SPRADDR.SPRADDR_CNTY_CODE,
      f_get_desc_fnc('STVATYP', SPRADDR.SPRADDR_ATYP_CODE, 30) as SPRADDR_ATYP_DESC,
      f_get_desc_fnc('STVCNTY', SPRADDR.SPRADDR_CNTY_CODE, 30) as SPRADDR_CNTY_DESC

  FROM
      SPRADDR SPRADDR

  WHERE
      SPRADDR.SPRADDR_ATYP_CODE IN ('MA','PA','PR')
      AND SPRADDR.SPRADDR_STATUS_IND IS NULL
      AND SPRADDR.SPRADDR_VERSION = (SELECT MAX(SPRADDR_VERSION)
                                      FROM   SPRADDR SPRADDRX
                                      WHERE  SPRADDRX.SPRADDR_PIDM = SPRADDR.SPRADDR_PIDM
                                      AND    SPRADDRX.SPRADDR_ATYP_CODE IN ('MA','PA','PR')
                                      AND    SPRADDRX.SPRADDR_STATUS_IND IS NULL)
      AND SPRADDR.SPRADDR_SURROGATE_ID = (SELECT MAX(SPRADDR_SURROGATE_ID)
                                          FROM   SPRADDR SPRADDRX
                                          WHERE  SPRADDRX.SPRADDR_PIDM = SPRADDR.SPRADDR_PIDM
                                          AND    SPRADDRX.SPRADDR_ATYP_CODE IN ('MA','PA','PR')
                                          AND    SPRADDRX.SPRADDR_STATUS_IND IS NULL)
  ),

-- GLOBAL PHONEBOOK
SPATELE as
(
  SELECT
      SPRTELE.SPRTELE_PIDM,
      SPRTELE.SPRTELE_TELE_CODE,
      SPRTELE.SPRTELE_PHONE_AREA,
      SPRTELE.SPRTELE_PHONE_NUMBER,
      SPRTELE.SPRTELE_SURROGATE_ID,
      SPRTELE.SPRTELE_VERSION,
      f_get_desc_fnc('STVTELE', SPRTELE.SPRTELE_TELE_CODE, 30) as SPRTELE_TELE_DESC

  FROM
      SPRTELE SPRTELE

  WHERE
      SPRTELE.SPRTELE_SURROGATE_ID = (SELECT MAX(SPRTELE_SURROGATE_ID)
                                      FROM   SPRTELE SPRTELEX
                                      WHERE  SPRTELEX.SPRTELE_PIDM = SPRTELE.SPRTELE_PIDM
                                      AND    SPRTELEX.SPRTELE_STATUS_IND IS NULL)
  ),

-- GLOBAL EMERGENCY CONTACT
SPAEMRG AS
(
  SELECT
      SPREMRG.SPREMRG_PIDM,
      SPREMRG.SPREMRG_PRIORITY,
      SPREMRG.SPREMRG_LAST_NAME,
      SPREMRG.SPREMRG_FIRST_NAME,
      SPREMRG.SPREMRG_MI,
      SPREMRG.SPREMRG_STREET_LINE1,
      SPREMRG.SPREMRG_STREET_LINE2,
      SPREMRG.SPREMRG_STREET_LINE3,
      SPREMRG.SPREMRG_CITY,
      SPREMRG.SPREMRG_STAT_CODE,
      SPREMRG.SPREMRG_NATN_CODE,
      SPREMRG.SPREMRG_ZIP,
      SPREMRG.SPREMRG_PHONE_AREA,
      SPREMRG.SPREMRG_PHONE_NUMBER,
      SPREMRG.SPREMRG_PHONE_EXT,
      SPREMRG.SPREMRG_RELT_CODE,
      SPREMRG.SPREMRG_ACTIVITY_DATE,
      SPREMRG.SPREMRG_ATYP_CODE,
      SPREMRG.SPREMRG_HOUSE_NUMBER,
      SPREMRG.SPREMRG_STREET_LINE4,
      SPREMRG.SPREMRG_SURROGATE_ID,
      SPREMRG.SPREMRG_VERSION,
      f_get_desc_fnc('STVRELT', SPREMRG.SPREMRG_RELT_CODE, 30) as SPREMRG_RELT_DESC

  FROM
      SPREMRG SPREMRG
  ),

SPAPERS as
(
  SELECT
      SPBPERS.SPBPERS_PIDM,
      SPBPERS.SPBPERS_SSN,
      SPBPERS.SPBPERS_BIRTH_DATE,
      SPBPERS.SPBPERS_SEX,
      SPBPERS.SPBPERS_CONFID_IND,
      SPBPERS.SPBPERS_PREF_FIRST_NAME,
      SPBPERS.SPBPERS_CITZ_CODE,
      SPBPERS.SPBPERS_ETHN_CDE,
      SPBPERS.SPBPERS_SURROGATE_ID,
      SPBPERS.SPBPERS_VERSION,
      SPBPERS.SPBPERS_GNDR_CODE,
      GOBINTL.GOBINTL_PIDM,
      GOBINTL.GOBINTL_SPOUSE_IND,
      GOBINTL.GOBINTL_SIGNATURE_IND,
      GOBINTL.GOBINTL_NATN_CODE_BIRTH,
      GOBINTL.GOBINTL_SURROGATE_ID,
      GOBINTL.GOBINTL_VERSION,
      CASE
        WHEN SPBPERS_ETHN_CDE IN (2,3,4,5,6,7,9,10) THEN 'Y'
          ELSE 'N'
            END AS SPBPERS_SICAS_HISP_ORIGIN,
      CASE
        WHEN SPBPERS.SPBPERS_CITZ_CODE = 'Y' THEN 'United States'
          ELSE (SELECT STVNATN_NATION
               FROM    STVNATN
               WHERE   STVNATN_CODE = NVL(GOBINTL.GOBINTL_NATN_CODE_LEGAL, GOBINTL.GOBINTL_NATN_CODE_BIRTH))
                 END AS SPBPERS_CITZ_COUNTRY,
      F_GET_DESC_FNC('STVETHN', SPBPERS_ETHN_CDE, 30) as SPBPERS_ETHN_DESC,
      F_GET_DESC_FNC('STVNATN', GOBINTL_NATN_CODE_BIRTH, 30) as GOBINTL_BIRTH_NATN,
      ROUND(((SYSDATE - SPBPERS_BIRTH_DATE)/365), 0) as SPBPERS_AGE

    FROM
        SPBPERS SPBPERS
        LEFT OUTER JOIN GOBINTL GOBINTL ON GOBINTL.GOBINTL_PIDM = SPBPERS.SPBPERS_PIDM
    ),

-- GLOBAL RACE & ETHNICITY
GOARACE as
(
  SELECT
      GORPRAC.GORPRAC_PIDM AS GORPRAC_PIDM,
      -- GORPRAC_RACE_CDE,
      (LISTAGG(GORPRAC.GORPRAC_RACE_CDE,', ') WITHIN GROUP (ORDER BY GORPRAC.GORPRAC_RACE_CDE)) AS GORRACE_RACE_CDE,
      (LISTAGG(GORRACE.GORRACE_DESC,', ') WITHIN GROUP (ORDER BY GORRACE.GORRACE_DESC)) AS GORRACE_DESC

  FROM
      GORPRAC GORPRAC
      LEFT OUTER JOIN GORRACE GORRACE ON GORRACE.GORRACE_RACE_CDE = GORPRAC.GORPRAC_RACE_CDE

  GROUP BY
      GORPRAC.GORPRAC_PIDM
  ),

SOREMAL as
(
  SELECT
      GOREMAL.GOREMAL_PIDM,
      GOREMAL.GOREMAL_EMAL_CODE,
      GOREMAL.GOREMAL_EMAIL_ADDRESS,
      GOREMAL.GOREMAL_STATUS_IND,
      GOREMAL.GOREMAL_PREFERRED_IND,
      GOREMAL.GOREMAL_ACTIVITY_DATE,
      GOREMAL.GOREMAL_SURROGATE_ID,
      GOREMAL.GOREMAL_VERSION,
      GORADID.GORADID_PIDM,
      GORADID.GORADID_ADDITIONAL_ID,
      GORADID.GORADID_ADID_CODE,
      GORADID.GORADID_SURROGATE_ID,
      GORADID.GORADID_VERSION,
      GOBTPAC.GOBTPAC_PIDM,
      GOBTPAC.GOBTPAC_PIN_DISABLED_IND,
      GOBTPAC.GOBTPAC_USAGE_ACCEPT_IND,
      GOBTPAC.GOBTPAC_PIN,
      GOBTPAC.GOBTPAC_PIN_EXP_DATE,
      GOBTPAC.GOBTPAC_SURROGATE_ID,
      GOBTPAC.GOBTPAC_VERSION,
      GOBTPAC.GOBTPAC_EXTERNAL_USER --esfid

  FROM
      GOREMAL GOREMAL
      LEFT OUTER JOIN GORADID GORADID ON GORADID.GORADID_PIDM = GOREMAL.GOREMAL_PIDM
            AND GORADID.GORADID_ADID_CODE = 'SUID'
      LEFT OUTER JOIN GOBUMAP GOBUMAP ON GOBUMAP.GOBUMAP_PIDM = GOREMAL.GOREMAL_PIDM
      LEFT OUTER JOIN GOBTPAC GOBTPAC ON GOBTPAC.GOBTPAC_PIDM = GOREMAL.GOREMAL_PIDM

  WHERE
      GOREMAL.GOREMAL_STATUS_IND = 'A'
      AND GOREMAL.GOREMAL_PREFERRED_IND = 'Y'
      AND GOREMAL.GOREMAL_EMAL_CODE IN ('ESF', 'SU', 'AD', 'PERS')
      --AND GORADID.GORADID_ADID_CODE = 'SUID'
  ),

SGASTDN as
(
  SELECT
      SGBSTDN.SGBSTDN_PIDM,
      SGBSTDN.SGBSTDN_TERM_CODE_EFF,
      SGBSTDN.SGBSTDN_STST_CODE,
      SGBSTDN.SGBSTDN_LEVL_CODE,
      SGBSTDN.SGBSTDN_STYP_CODE,
      SGBSTDN.SGBSTDN_TERM_CODE_MATRIC,
      SGBSTDN.SGBSTDN_TERM_CODE_ADMIT,
      SGBSTDN.SGBSTDN_EXP_GRAD_DATE,
      SGBSTDN.SGBSTDN_CAMP_CODE,
      SGBSTDN.SGBSTDN_COLL_CODE_1,
      SGBSTDN.SGBSTDN_DEGC_CODE_1,
      SGBSTDN.SGBSTDN_MAJR_CODE_1,
      SGBSTDN.SGBSTDN_MAJR_CODE_MINR_1,
      SGBSTDN.SGBSTDN_MAJR_CODE_MINR_1_2,
      SGBSTDN.SGBSTDN_MAJR_CODE_CONC_1,
      SGBSTDN.SGBSTDN_RESD_CODE,
      SGBSTDN.SGBSTDN_ADMT_CODE,
      SGBSTDN.SGBSTDN_DEPT_CODE,
      SGBSTDN.SGBSTDN_PROGRAM_1,
      SGBSTDN.SGBSTDN_TERM_CODE_GRAD,
      SGBSTDN.SGBSTDN_ACTIVITY_DATE,
      SFRTHST.SFRTHST_PIDM,
      SFRTHST.SFRTHST_TERM_CODE,
      SFRTHST.SFRTHST_TMST_CODE,
      SFRTHST.SFRTHST_TMST_DATE,
      SFRTHST.SFRTHST_SURROGATE_ID,
      SFRTHST.SFRTHST_VERSION,
      CASE
        WHEN SFRTHST_TMST_CODE IS NULL THEN NULL
          ELSE f_Get_desc_fnc('STVTMST', SFRTHST.SFRTHST_TMST_CODE, 30)
            END as SFRTHST_TMST_DESC,
      f_class_calc_fnc(SGBSTDN.SGBSTDN_PIDM, SGBSTDN.SGBSTDN_LEVL_CODE, SGBSTDN.SGBSTDN_TERM_CODE_EFF) as SGBSTDN_CLAS_CODE,
      f_get_desc_fnc('STVTERM',SGBSTDN.SGBSTDN_TERM_CODE_EFF, 30) as SGBSTDN_TERM_EFF_DESC,
      f_get_desc_fnc('STVSTST',SGBSTDN.SGBSTDN_STST_CODE, 30) as SGBSTDN_STST_DESC,
      f_get_desc_fnc('STVLEVL', SGBSTDN.SGBSTDN_LEVL_CODE, 30) as SGBSTDN_LEVL_DESC,
      f_get_desc_fnc('STVSTYP', SGBSTDN.SGBSTDN_STYP_CODE, 30) as SGBSTDN_STYP_DESC,
      f_get_desc_fnc('STVDEGC', SGBSTDN.SGBSTDN_DEGC_CODE_1, 30) as SGBSTDN_DEGC_DESC,
      f_get_desc_fnc('STVMAJR', SGBSTDN.SGBSTDN_MAJR_CODE_1, 30) as SGBSTDN_MAJR_DESC,
      f_get_desc_fnc('STVMAJR', SGBSTDN.SGBSTDN_MAJR_CODE_MINR_1, 30) as SGBSTDN_MINR_1_DESC,
      f_get_desc_fnc('STVMAJR', SGBSTDN.SGBSTDN_MAJR_CODE_MINR_1_2, 30) as SGBSTDN_MINR_1_2_DESC,
      f_get_desc_fnc('STVMAJR', SGBSTDN.SGBSTDN_MAJR_CODE_CONC_1, 30) as SGBSTDN_CONC_DESC,
      f_get_desc_fnc('STVRESD', SGBSTDN.SGBSTDN_RESD_CODE, 30) as SGBSTDN_RESD_DESC,
      f_get_desc_fnc('STVADMT', SGBSTDN.SGBSTDN_ADMT_CODE, 30) as SGBSTDN_ADMT_DESC,
      f_get_desc_fnc('STVDEPT', SGBSTDN.SGBSTDN_DEPT_CODE, 30) as SGBSTDN_DEPT_DESC,
      f_get_desc_fnc('STVTERM', SGBSTDN.SGBSTDN_TERM_CODE_MATRIC, 30) as SGBSTDN_MATRIC_TERM_DESC,
      f_get_desc_fnc('STVTERM', SGBSTDN.SGBSTDN_TERM_CODE_GRAD, 30) as SGBSTDN_GRAD_TERM_DESC,
      f_get_desc_fnc('STVCLAS', f_class_calc_fnc(SGBSTDN.SGBSTDN_PIDM,SGBSTDN.SGBSTDN_LEVL_CODE, SGBSTDN.SGBSTDN_TERM_CODE_EFF), 30) as SGBSTDN_CLAS_DESC

  FROM
      SGBSTDN SGBSTDN
      LEFT OUTER JOIN SFRTHST SFRTHST ON SFRTHST.SFRTHST_PIDM = SGBSTDN.SGBSTDN_PIDM
            AND SFRTHST_SURROGATE_ID = (SELECT MAX(SFRTHST_SURROGATE_ID)
                                        FROM   SFRTHST SFRTHST1
                                        WHERE  SFRTHST1.SFRTHST_PIDM = SGBSTDN.SGBSTDN_PIDM
                                        AND    SFRTHST1.SFRTHST_TERM_CODE = SGBSTDN_TERM_CODE_EFF)
  ),

SHADEGR as
(
  SELECT
      SHRDGMR.SHRDGMR_PIDM,
      SHRDGMR.SHRDGMR_SEQ_NO,
      SHRDGMR.SHRDGMR_DEGC_CODE,
      SHRDGMR.SHRDGMR_DEGS_CODE,
      SHRDGMR.SHRDGMR_LEVL_CODE,
      SHRDGMR.SHRDGMR_COLL_CODE_1,
      SHRDGMR.SHRDGMR_MAJR_CODE_1,
      SHRDGMR.SHRDGMR_MAJR_CODE_MINR_1,
      SHRDGMR.SHRDGMR_MAJR_CODE_CONC_1,
      SHRDGMR.SHRDGMR_APPL_DATE,
      SHRDGMR.SHRDGMR_GRAD_DATE,
      SHRDGMR.SHRDGMR_ACYR_CODE_BULLETIN,
      SHRDGMR.SHRDGMR_CAMP_CODE,
      SHRDGMR.SHRDGMR_TERM_CODE_GRAD,
      SHRDGMR.SHRDGMR_ACYR_CODE,
      SHRDGMR.SHRDGMR_TERM_CODE_STUREC,
      SHRDGMR.SHRDGMR_ACTIVITY_DATE,
      SHRDGMR.SHRDGMR_GRST_CODE,
      SHRDGMR.SHRDGMR_TERM_CODE_COMPLETED,
      SHRDGMR.SHRDGMR_DEPT_CODE,
      SHRDGMR.SHRDGMR_PROGRAM,
      SHRDGMR.SHRDGMR_SURROGATE_ID,
      SHRDGMR.SHRDGMR_VERSION,
      SHRDGIH.SHRDGIH_PIDM,
      SHRDGIH.SHRDGIH_DGMR_SEQ_NO,
      SHRDGIH.SHRDGIH_HONR_CODE,
      SHRDGIH.SHRDGIH_ACTIVITY_DATE,
      SHRDGIH.SHRDGIH_TRANSC_PRT_IND,
      SHRDGIH.SHRDGIH_COMMENCE_PRT_IND,
      SHRDGIH.SHRDGIH_EDI_DEFAULT,
      SHRDGIH.SHRDGIH_SURROGATE_ID,
      SHRDGIH.SHRDGIH_VERSION,
      CASE
        WHEN SHRDGIH.SHRDGIH_HONR_CODE IS NULL THEN NULL
          ELSE f_get_desc_fnc('STVHONR', SHRDGIH.SHRDGIH_HONR_CODE, 30)
            END as SHRDGIH_HONR_DESC,
      f_get_desc_fnc('STVDEGS', SHRDGMR.SHRDGMR_DEGS_CODE, 30) as SHRDGMR_DEGS_DESC,
      f_get_desc_fnc('STVDEGC', SHRDGMR.SHRDGMR_DEGC_CODE, 30) as SHRDGMR_DEGC_DESC,
      f_get_desc_fnc('STVLEVL', SHRDGMR.SHRDGMR_LEVL_CODE, 30) as SHRDGMR_LEVL_DESC,
      f_get_desc_fnc('STVMAJR', SHRDGMR.SHRDGMR_MAJR_CODE_1, 30) as SHRDGMR_MAJR_DESC,
      f_get_desc_fnc('STVMAJR', SHRDGMR.SHRDGMR_COLL_CODE_1, 30) as SHRDGMR_COLL_DESC,
      f_get_desc_fnc('STVGRST', SHRDGMR.SHRDGMR_GRST_CODE, 30) as SHRDGMR_GRST_DESC

  FROM
      SHRDGMR SHRDGMR
      LEFT OUTER JOIN SHRDGIH SHRDGIH ON SHRDGIH.SHRDGIH_PIDM = SHRDGMR.SHRDGMR_PIDM
            AND SHRDGIH.SHRDGIH_DGMR_SEQ_NO = SHRDGMR.SHRDGMR_SEQ_NO

  WHERE
      SHRDGMR.SHRDGMR_TERM_CODE_GRAD = (SELECT MAX(SHRDGMR_TERM_CODE_GRAD)
                                       FROM    SHRDGMR SHRDGMRX
                                       WHERE   SHRDGMRX.SHRDGMR_PIDM = SHRDGMR.SHRDGMR_PIDM
                                       AND     SHRDGMRX.SHRDGMR_TERM_CODE_GRAD <= :select_term_code.STVTERM_CODE)
  ),

SFAWDRL as
(
  SELECT
      SFRWDRL.SFRWDRL_PIDM,
      SFRWDRL.SFRWDRL_TERM_CODE,
      SFRWDRL.SFRWDRL_SEQ_NO,
      SFRWDRL.SFRWDRL_WDRL_CODE,
      SFRWDRL.SFRWDRL_EFF_WDRL_DATE,
      SFRWDRL.SFRWDRL_ESTS_CODE,
      SFRWDRL.SFRWDRL_ESTS_DATE,
      SFRWDRL.SFRWDRL_TIV_IND,
      SFRWDRL.SFRWDRL_PROCESSED_IND,
      SFRWDRL.SFRWDRL_ENRL_START_DATE,
      SFRWDRL.SFRWDRL_ENRL_END_DATE,
      SFRWDRL.SFRWDRL_ENRL_DAYS,
      SFRWDRL.SFRWDRL_ATTEND_DAYS,
      SFRWDRL.SFRWDRL_PERCENT_ATTEND,
      SFRWDRL.SFRWDRL_ORIGINAL_CHARGES,
      SFRWDRL.SFRWDRL_ACTIVITY_DATE,
      SFRWDRL.SFRWDRL_SURROGATE_ID,
      SFRWDRL.SFRWDRL_VERSION,
      f_get_desc_fnc('STVESTS', SFRWDRL.SFRWDRL_ESTS_CODE, 30) as SFRWDRL_ESTS_DESC

  FROM
      SFRWDRL SFRWDRL

  WHERE
      SFRWDRL.SFRWDRL_TERM_CODE = (SELECT MAX(SFRWDRL_TERM_CODE)
                                  FROM    SFRWDRL SFRWDRLX
                                  WHERE   SFRWDRLX.SFRWDRL_PIDM = SFRWDRL.SFRWDRL_PIDM
                                  AND     SFRWDRLX.SFRWDRL_TERM_CODE <= :select_term_code.STVTERM_CODE)
  ),

SAAADMS as
(
    SELECT
        SARADAP_PIDM,
        SARADAP_TERM_CODE_ENTRY,
        SARADAP_APPL_NO,
        SARADAP_LEVL_CODE,
        SARADAP_APPL_DATE,
        SARADAP_APST_CODE,
        SARADAP_APST_DATE,
        SARADAP_MAINT_IND,
        SARADAP_ADMT_CODE,
        SARADAP_STYP_CODE,
        SARADAP_CAMP_CODE,
        SARADAP_COLL_CODE_1,
        SARADAP_DEGC_CODE_1,
        SARADAP_MAJR_CODE_1,
        SARADAP_RESD_CODE,
        SARADAP_ACTIVITY_DATE,
        SARADAP_DEPT_CODE,
        SARADAP_PROGRAM_1,
        SARADAP_TERM_CODE_CTLG_1,
        SARADAP_WEB_TRANS_NO,
        SARADAP_WEB_AMOUNT,
        SARADAP_WEB_RECEIPT_NUMBER,
        SARADAP_SURROGATE_ID,
        SARADAP_VERSION,
        SARAPPD_PIDM,
        SARAPPD_TERM_CODE_ENTRY,
        SARAPPD_APPL_NO,
        SARAPPD_SEQ_NO,
        SARAPPD_APDC_DATE,
        SARAPPD_APDC_CODE,
        SARAPPD_MAINT_IND,
        SARAPPD_ACTIVITY_DATE,
        SARAPPD_USER,
        SARAPPD_DATA_ORIGIN,
        SARAPPD_SURROGATE_ID,
        SARAPPD_VERSION,
        SARAPPD_USER_ID,
        SARAPPD_VPDI_CODE,
        SARAPPD_GUID,
        SARAPPD_DFE_ADMN_DECN_GUID,
        f_get_desc_fnc('STVLEVL', SARADAP_LEVL_CODE, 30) as SARADAP_LEVL_DESC,
        f_get_desc_fnc('STVAPST', SARADAP_APST_CODE, 30) as SARADAP_APST_DESC,
        f_get_desc_fnc('STVADMT', SARADAP_ADMT_CODE, 30) as SARADAP_ADMT_DESC,
        f_get_desc_fnc('STVAPST', SARADAP_STYP_CODE, 30) as SARADAP_STYP_DESC,
        f_get_desc_fnc('STVCAMP', SARADAP_CAMP_CODE, 30) as SARADAP_CAMP_DESC,
        f_get_desc_fnc('STVAPST', SARADAP_COLL_CODE_1, 30) as SARADAP_COLL_DESC,
        f_get_desc_fnc('STVDEGC', SARADAP_DEGC_CODE_1, 30) as SARADAP_DEGC_DESC,
        f_get_desc_fnc('STVMAJR', SARADAP_MAJR_CODE_1, 30) as SARADAP_MAJR_DESC,
        f_get_desc_fnc('STVRESD', SARADAP_RESD_CODE, 30) as SARADAP_RESD_DESC,
        f_get_desc_fnc('STVDEPT', SARADAP_DEPT_CODE, 30) as SARADAP_DEPT_DESC,
        f_get_desc_fnc('STVAPDC', SARAPPD_APDC_CODE, 30) as SARAPPD_APDC_DESC

    FROM
        SARADAP SARADAP
        LEFT OUTER JOIN SARAPPD SARAPPD ON SARAPPD.SARAPPD_PIDM = SARADAP.SARADAP_PIDM
             AND SARAPPD.SARAPPD_TERM_CODE_ENTRY = SARADAP.SARADAP_TERM_CODE_ENTRY
             AND SARAPPD.SARAPPD_APPL_NO = SARADAP.SARADAP_APPL_NO

    WHERE
        SARADAP.SARADAP_APPL_NO = (SELECT MAX(SARADAP_APPL_NO)
                                  FROM    SARADAP SARADAPX
                                  WHERE   SARADAPX.SARADAP_PIDM = SARADAP.SARADAP_PIDM)

        AND SARAPPD.SARAPPD_SEQ_NO = (SELECT MAX(SARAPPD_SEQ_NO)
                                     FROM    SARAPPD SARAPPDX
                                     WHERE   SARAPPDX.SARAPPD_PIDM = SARAPPD.SARAPPD_PIDM
                                     AND SARAPPDX.SARAPPD_TERM_CODE_ENTRY = SARAPPD.SARAPPD_TERM_CODE_ENTRY
                                     AND SARAPPDX.SARAPPD_APPL_NO = SARAPPD.SARAPPD_APPL_NO)
        AND SARAPPD.SARAPPD_APPL_NO = (SELECT MAX(SARAPPD_APPL_NO)
                                      FROM    SARAPPD SARAPPDX
                                      WHERE   SARAPPDX.SARAPPD_PIDM = SARAPPD.SARAPPD_PIDM
                                      AND SARAPPDX.SARAPPD_TERM_CODE_ENTRY = SARAPPD.SARAPPD_TERM_CODE_ENTRY
                                      AND SARAPPDX.SARAPPD_APPL_NO = SARAPPD.SARAPPD_APPL_NO)
    ),

ROAHSCH as
(
    SELECT
        SORHSCH_PIDM,
        SORHSCH_SBGI_CODE,
        SORHSCH_GRADUATION_DATE,
        SORHSCH_GPA,
        SORHSCH_TRANS_RECV_DATE,
        F_GET_DESC_FNC('STVSBGI', SORHSCH_SBGI_CODE, 30) as SORHSCH_SGBI_DESC,
        SORHSCH_SURROGATE_ID,
        SORHSCH_VERSION

    FROM
        SORHSCH SORHSCH
    ),

SGAADVR as
(
  SELECT
      SGRADVR.SGRADVR_PIDM,
      SGRADVR.SGRADVR_TERM_CODE_EFF,
      SGRADVR.SGRADVR_ADVR_PIDM,
      SGRADVR.SGRADVR_ADVR_CODE,
      SGRADVR.SGRADVR_PRIM_IND,
      SGRADVR.SGRADVR_ACTIVITY_DATE,
      SGRADVR.SGRADVR_SURROGATE_ID,
      CASE
        WHEN SGRADVR_ADVR_PIDM IS NULL THEN NULL
          ELSE f_format_name(SGRADVR.SGRADVR_ADVR_PIDM, 'LF30')
            END as SGRADVR_ADVR_NAME,
      CASE
        WHEN SGRADVR.SGRADVR_PIDM IS NULL THEN NULL
          ELSE f_format_name(SGRADVR.SGRADVR_PIDM, 'LF30')
            END as SGRADVR_NAME,
      CASE
        WHEN SGRADVR_ADVR_CODE IS NULL THEN NULL
          ELSE f_get_desc_fnc('STVADVR', SGRADVR_ADVR_CODE, 30)
            END as SGRADVR_ADVR_DESC

  FROM
      SGRADVR SGRADVR

  WHERE
      SGRADVR.SGRADVR_PRIM_IND = 'Y'
      AND SGRADVR.SGRADVR_TERM_CODE_EFF = (SELECT MAX(SGRADVR_TERM_CODE_EFF)
                                          FROM    SGRADVR SGRADVRX
                                          WHERE   SGRADVRX.SGRADVR_PIDM = SGRADVR.SGRADVR_PIDM
                                          AND     SGRADVRX.SGRADVR_PRIM_IND = 'Y'
                                          AND     SGRADVRX.SGRADVR_TERM_CODE_EFF <= :select_term_code.STVTERM_CODE)

      AND SGRADVR.SGRADVR_SURROGATE_ID = (SELECT MAX(SGRADVR_SURROGATE_ID)
                                         FROM     SGRADVR SGRADVRX
                                         WHERE    SGRADVRX.SGRADVR_PIDM = SGRADVR.SGRADVR_PIDM
                                         AND      SGRADVRX.SGRADVR_TERM_CODE_EFF = SGRADVR.SGRADVR_TERM_CODE_EFF
                                         AND      SGRADVRX.SGRADVR_PRIM_IND = 'Y')

  ),

SHATERM as
(
  SELECT
      SHRTTRM_PIDM,
      SHRTTRM_TERM_CODE,
      SHRTTRM_UPDATE_SOURCE_IND,
      SHRTTRM_PRE_CATALOG_IND,
      SHRTTRM_RECORD_STATUS_IND,
      SHRTTRM_RECORD_STATUS_DATE,
      SHRTTRM_ASTD_CODE_END_OF_TERM,
      SHRTTRM_ASTD_DATE_END_OF_TERM,
      SHRTTRM_ACTIVITY_DATE,
      SHRTTRM_ASTD_CODE_DL,
      SHRTTRM_ASTD_DATE_DL,
      SHRTTRM_WRSN_CODE,
      SHRTTRM_SURROGATE_ID,
      SHRTTRM_VERSION,
      CASE
        WHEN SHRTTRM_ASTD_CODE_END_OF_TERM IS NULL THEN NULL
          ELSE f_get_desc_fnc('STVASTD', SHRTTRM_ASTD_CODE_END_OF_TERM, 30)
            END as SHRTTRM_ASTD_DESC_END_OF_TERM,
      CASE
        WHEN SHRTTRM_ASTD_CODE_DL IS NULL THEN NULL
          ELSE f_get_desc_fnc('STVASTD', SHRTTRM_ASTD_CODE_DL, 30)
            END as SHRTTRM_ASTD_DESC_DL,
      CASE
        WHEN SHRTTRM_WRSN_CODE IS NULL THEN NULL
          ELSE f_get_desc_fnc('STVWRSN', SHRTTRM_WRSN_CODE, 30)
            END as SHRTTRM_WRSN_DESC

  FROM
      SHRTTRM SHRTTRM

  WHERE
      SHRTTRM_TERM_CODE = (SELECT MAX(SHRTTRM_TERM_CODE)
                           FROM   SHRTTRM SHRTTRMX
                           WHERE  SHRTTRMX.SHRTTRM_PIDM = SHRTTRM.SHRTTRM_PIDM
                           AND    SHRTTRMX.SHRTTRM_TERM_CODE < :select_term_code.STVTERM_CODE)
  ),

SHAGPAR as
(
  SELECT
      SHRTGPA.SHRTGPA_PIDM,
      SHRTGPA.SHRTGPA_LEVL_CODE,
      SHRTGPA.SHRTGPA_GPA_TYPE_IND,
      SHRTGPA.SHRTGPA_TERM_CODE,
      SHRTGPA.SHRTGPA_HOURS_ATTEMPTED,
      SHRTGPA.SHRTGPA_HOURS_EARNED,
      SHRTGPA.SHRTGPA_GPA_HOURS,
      SHRTGPA.SHRTGPA_GPA,
      SHRTGPA.SHRTGPA_QUALITY_POINTS,
      SHRTGPA.SHRTGPA_HOURS_PASSED,
      SHRTGPA.SHRTGPA_SURROGATE_ID,
      SHRLGPA.SHRLGPA_PIDM,
      SHRLGPA.SHRLGPA_LEVL_CODE,
      SHRLGPA.SHRLGPA_GPA_TYPE_IND,
      SHRLGPA.SHRLGPA_HOURS_ATTEMPTED,
      SHRLGPA.SHRLGPA_HOURS_EARNED,
      SHRLGPA.SHRLGPA_GPA_HOURS,
      SHRLGPA.SHRLGPA_GPA,
      SHRLGPA.SHRLGPA_QUALITY_POINTS,
      SHRLGPA.SHRLGPA_SURROGATE_ID,
      trunc(SHRTGPA.SHRTGPA_GPA,3) as SHRTGPA_SEMESTER_GPA,
      trunc(SHRLGPA.SHRLGPA_GPA,3) as SHRLGPA_CUMULATIVE_GPA

  FROM
      SHRTGPA SHRTGPA
      LEFT OUTER JOIN SHRLGPA SHRLGPA ON SHRLGPA.SHRLGPA_PIDM = SHRTGPA.SHRTGPA_PIDM
            AND SHRLGPA.SHRLGPA_GPA_TYPE_IND = 'I'
            AND SHRLGPA.SHRLGPA_LEVL_CODE = SHRTGPA.SHRTGPA_LEVL_CODE

  WHERE
      SHRTGPA.SHRTGPA_GPA_TYPE_IND = 'I'
      AND SHRTGPA.SHRTGPA_TERM_CODE = (SELECT MAX(SHRTGPA_TERM_CODE)
                                      FROM    SHRTGPA SHRTGPAX
                                      WHERE   SHRTGPAX.SHRTGPA_PIDM = SHRTGPA.SHRTGPA_PIDM
                                      AND     SHRTGPAX.SHRTGPA_GPA_TYPE_IND  = SHRTGPA.SHRTGPA_GPA_TYPE_IND
                                      AND     SHRTGPAX.SHRTGPA_LEVL_CODE = SHRTGPA.SHRTGPA_LEVL_CODE
                                      AND     SHRTGPAX.SHRTGPA_TERM_CODE <= :select_term_code.STVTERM_CODE)
  ),

SFAREGS as
(
  SELECT
      SFRSTCR.SFRSTCR_TERM_CODE,
      SFRSTCR.SFRSTCR_PIDM,
      SFRSTCR.SFRSTCR_CRN,
      SFRSTCR.SFRSTCR_CLASS_SORT_KEY,
      SFRSTCR.SFRSTCR_REG_SEQ,
      SFRSTCR.SFRSTCR_PTRM_CODE,
      SFRSTCR.SFRSTCR_RSTS_CODE,
      SFRSTCR.SFRSTCR_BILL_HR,
      SFRSTCR.SFRSTCR_WAIV_HR,
      SFRSTCR.SFRSTCR_CREDIT_HR,
      SFRSTCR.SFRSTCR_BILL_HR_HOLD,
      SFRSTCR.SFRSTCR_CREDIT_HR_HOLD,
      SFRSTCR.SFRSTCR_GMOD_CODE,
      SFRSTCR.SFRSTCR_GRDE_CODE,
      SFRSTCR.SFRSTCR_GRDE_DATE,
      SFRSTCR.SFRSTCR_ADD_DATE,
      SFRSTCR.SFRSTCR_LEVL_CODE,
      SFRSTCR.SFRSTCR_CAMP_CODE,
      SFRSTCA.SFRSTCA_TERM_CODE,
      SFRSTCA.SFRSTCA_PIDM,
      SFRSTCA.SFRSTCA_CRN,
      SFRSTCA.SFRSTCA_SEQ_NUMBER,
      SFRSTCA.SFRSTCA_LEVL_CODE,
      SFRSTCA.SFRSTCA_CAMP_CODE,
      SFRSTCA.SFRSTCA_ADD_DATE,
      SFRSTCA.SFRSTCA_ACTIVITY_DATE,
      SFRSTCA.SFRSTCA_RSTS_CODE,
      SFRSTCA.SFRSTCA_RSTS_DATE,
      SFRSTCA.SFRSTCA_ERROR_FLAG,
      SFRSTCA.SFRSTCA_MESSAGE,
      SFRSTCA.SFRSTCA_BILL_HR,
      SFRSTCA.SFRSTCA_CREDIT_HR,
      SFRSTCA.SFRSTCA_GMOD_CODE,
      SFRSTCA.SFRSTCA_USER,
      SFRSTCA.SFRSTCA_GCMT_CODE,
      SFRSTCA.SFRSTCA_SOURCE_CDE,
      SFRSTCA.SFRSTCA_DATA_ORIGIN,
      SFRSTCA.SFRSTCA_ATTEMPT_HR,
      SFRSTCA.SFRSTCA_RMSG_CDE,
      SFRSTCA.SFRSTCA_STSP_KEY_SEQUENCE,
      SFRSTCA.SFRSTCA_BRDH_SEQ_NUM,
      SFRSTCA.SFRSTCA_BLCK_CODE,
      SFRSTCA.SFRSTCA_STRH_SEQNO,
      SFRSTCA.SFRSTCA_STRD_SEQNO,
      SFRSTCA.SFRSTCA_SURROGATE_ID,
      SFRSTCA.SFRSTCA_VERSION,
      SFRSTCA.SFRSTCA_USER_ID,
      SFRSTCA.SFRSTCA_VPDI_CODE,
      SFRSTCA.SFRSTCA_SESSIONID,
      SFRSTCA.SFRSTCA_CURRENT_TIME,
      SFRSTCA.SFRSTCA_ENRL,
      SFRSTCA.SFRSTCA_SEATS_AVAIL

  FROM
      SFRSTCR SFRSTCR
      LEFT OUTER JOIN SFRSTCA SFRSTCA ON SFRSTCA.SFRSTCA_PIDM = SFRSTCR_PIDM
            AND SFRSTCA.SFRSTCA_TERM_CODE = SFRSTCR_TERM_CODE
            AND SFRSTCA.SFRSTCA_CRN = SFRSTCR_CRN
            AND SFRSTCA.SFRSTCA_SEQ_NUMBER = (SELECT MAX(SFRSTCA_SEQ_NUMBER)
                                             FROM    SFRSTCA SFRSTCAX
                                             WHERE   SFRSTCAX.SFRSTCA_PIDM = SFRSTCA.SFRSTCA_PIDM
                                             AND     SFRSTCAX.SFRSTCA_TERM_CODE = SFRSTCA.SFRSTCA_TERM_CODE
                                             AND     SFRSTCAX.SFRSTCA_CRN = SFRSTCA.SFRSTCA_CRN)

  WHERE
      SFRSTCR.SFRSTCR_TERM_CODE = :select_term_code.STVTERM_CODE
      AND SFRSTCA.SFRSTCA_TERM_CODE = SFRSTCR.SFRSTCR_TERM_CODE
  ),

PERSONS_LIST_DEMO as
(
  SELECT
      CASE
        WHEN SPBPERS_SEX IS NULL THEN 0
          ELSE 1
            END as SEX_Measure,
      CASE
        WHEN GORRACE_RACE_CDE IS NULL THEN 0
          ELSE 1
            END as RACE_Measure,
      CASE
        WHEN SPBPERS_ETHN_CDE IS NULL THEN 0
          ELSE 1
            END as ETHN_Measure,
      SPRIDEN_PIDM,
      SPRIDEN_ID,
      SPRIDEN_LAST_NAME,
      SPRIDEN_FIRST_NAME,
      SPRIDEN_MI,
      SPRIDEN_LEGAL_NAME,
      SPRIDEN_SEARCH_LAST_NAME,
      SPRIDEN_SEARCH_FIRST_NAME,
      SPRIDEN_SEARCH_MI,
      SPBPERS_PREF_FIRST_NAME,
      SPBPERS_AGE,
      SPBPERS_SEX,
      GORRACE_RACE_CDE,
      GORRACE_DESC,
      SPBPERS_ETHN_CDE,
      SPBPERS_ETHN_DESC,
      SPBPERS_SICAS_HISP_ORIGIN,
      SPBPERS_CITZ_CODE,
      SPBPERS_CITZ_COUNTRY,
      GOBINTL_NATN_CODE_BIRTH,
      GOBINTL_BIRTH_NATN,
      GOBTPAC_EXTERNAL_USER,
      GORADID_ADDITIONAL_ID,
      GOREMAL_EMAIL_ADDRESS,
      GOREMAL_EMAL_CODE

  FROM
      SPAIDEN SPRIDEN

      LEFT OUTER JOIN SPAPERS SPBPERS ON SPBPERS.SPBPERS_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN GOARACE GORPRAC ON GORPRAC.GORPRAC_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SOREMAL GOREMAL ON GOREMAL.GOREMAL_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SGASTDN SGBSTDN ON SGBSTDN.SGBSTDN_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN STVCLAS STVCLAS ON STVCLAS.STVCLAS_CODE = SGBSTDN_CLAS_CODE

  WHERE
      SGBSTDN_TERM_CODE_EFF = FY_SGBSTDN_EFF_TERM(SPRIDEN_PIDM, :select_term_code.STVTERM_CODE)
  ),

PERSONS_ADRTELE as
(
  SELECT
      SPRIDEN_PIDM,
      SPRIDEN_ID,
      SPRIDEN_LAST_NAME,
      SPRIDEN_FIRST_NAME,
      SPRIDEN_MI,
      SPRIDEN_LEGAL_NAME,
      SPRIDEN_SEARCH_LAST_NAME,
      SPRIDEN_SEARCH_FIRST_NAME,
      SPRIDEN_SEARCH_MI,
      SPBPERS_PREF_FIRST_NAME,
      SPBPERS_AGE,
      SPBPERS_SEX,
      GORRACE_RACE_CDE,
      GORRACE_DESC,
      SPBPERS_ETHN_CDE,
      SPBPERS_ETHN_DESC,
      SPBPERS_SICAS_HISP_ORIGIN,
      SPBPERS_CITZ_CODE,
      SPBPERS_CITZ_COUNTRY,
      GOBINTL_NATN_CODE_BIRTH,
      GOBINTL_BIRTH_NATN,
      GOBTPAC_EXTERNAL_USER,
      GORADID_ADDITIONAL_ID,
      GOREMAL_EMAIL_ADDRESS,
      GOREMAL_EMAL_CODE,
      SPRADDR_PIDM,
      SPRADDR_ATYP_CODE,
      SPRADDR_ATYP_DESC,
      SPRADDR_FROM_DATE,
      SPRADDR_TO_DATE,
      SPRADDR_STREET_LINE1,
      SPRADDR_STREET_LINE2,
      SPRADDR_STREET_LINE3,
      SPRADDR_CITY,
      SPRADDR_STAT_CODE,
      SPRADDR_ZIP,
      SPRTELE_PIDM,
      SPRTELE_TELE_CODE,
      SPRTELE_TELE_DESC,
      SPRTELE_PHONE_AREA,
      SPRTELE_PHONE_NUMBER,
      SPREMRG_PIDM,
      SPREMRG_LAST_NAME,
      SPREMRG_FIRST_NAME,
      SPREMRG_MI,
      SPREMRG_RELT_CODE,
      SPREMRG_RELT_DESC,
      SPREMRG_PRIORITY,
      SPREMRG_STREET_LINE1,
      SPREMRG_STREET_LINE2,
      SPREMRG_STREET_LINE3,
      SPREMRG_CITY,
      SPREMRG_STAT_CODE,
      SPREMRG_NATN_CODE,
      SPREMRG_ZIP,
      SPREMRG_PHONE_AREA,
      SPREMRG_PHONE_NUMBER,
      SPREMRG_PHONE_EXT,
      SPREMRG_ACTIVITY_DATE,
      SPREMRG_ATYP_CODE,
      SPREMRG_HOUSE_NUMBER

  FROM
      PERSONS_LIST_DEMO A

      LEFT OUTER JOIN TUIADDR SPRADDR ON SPRADDR.SPRADDR_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SPATELE SPRTELE ON SPRTELE.SPRTELE_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SPAEMRG SPREMRG ON SPREMRG.SPREMRG_PIDM = SPRIDEN_PIDM

  WHERE
      (SPREMRG_PRIORITY <= 1 OR SPREMRG_PRIORITY IS NULL)
  ),

STUDENT_LIST_DEMO as
(
  SELECT
      CASE
        WHEN SPBPERS_SEX IS NULL THEN 0
          ELSE 1
            END as SEX_Measure,
      CASE
        WHEN GORRACE_RACE_CDE IS NULL THEN 0
          ELSE 1
            END as RACE_Measure,
      CASE
        WHEN SPBPERS_ETHN_CDE IS NULL THEN 0
          ELSE 1
            END as ETHN_Measure,
      CASE
        WHEN SGBSTDN_MAJR_CODE_1 IS NULL THEN 0
          ELSE 1
            END as POS_Measure,
      CASE
        WHEN SGBSTDN_DEGC_CODE_1 IS NULL THEN 0
          ELSE 1
            END as DEGC_Measure,
      CASE
        WHEN SGBSTDN_STYP_CODE IS NULL THEN 0
          ELSE 1
            END as STYP_Measure,
      CASE
        WHEN SGBSTDN_LEVL_CODE IS NULL THEN 0
          ELSE 1
            END as LEVL_Measure,
      CASE
        WHEN SGBSTDN_CLAS_CODE IS NULL THEN 0
          ELSE 1
            END as CLAS_Measure,
      SPRIDEN_PIDM,
      SPRIDEN_ID,
      SPRIDEN_LAST_NAME,
      SPRIDEN_FIRST_NAME,
      SPRIDEN_MI,
      SPRIDEN_LEGAL_NAME,
      SPRIDEN_SEARCH_LAST_NAME,
      SPRIDEN_SEARCH_FIRST_NAME,
      SPRIDEN_SEARCH_MI,
      SPBPERS_PREF_FIRST_NAME,
      SPBPERS_AGE,
      SPBPERS_SEX,
      GORRACE_RACE_CDE,
      GORRACE_DESC,
      SPBPERS_ETHN_CDE,
      SPBPERS_ETHN_DESC,
      SPBPERS_SICAS_HISP_ORIGIN,
      SPBPERS_CITZ_CODE,
      SPBPERS_CITZ_COUNTRY,
      GOBINTL_NATN_CODE_BIRTH,
      GOBINTL_BIRTH_NATN,
      GOBTPAC_EXTERNAL_USER,
      GORADID_ADDITIONAL_ID,
      GOREMAL_EMAIL_ADDRESS,
      GOREMAL_EMAL_CODE,
      SFRTHST_TMST_CODE,
      SFRTHST_TMST_DESC,
      SGBSTDN_TERM_CODE_EFF,
      SGBSTDN_STST_CODE,
      SGBSTDN_STYP_CODE,
      SGBSTDN_LEVL_CODE,
      SGBSTDN_CLAS_CODE,
      SGBSTDN_DEPT_CODE,
      SGBSTDN_MAJR_CODE_1,
      SGBSTDN_MAJR_CODE_MINR_1,
      SGBSTDN_MAJR_CODE_MINR_1_2,
      SGBSTDN_MAJR_CODE_CONC_1,
      SGBSTDN_DEGC_CODE_1,
      SGBSTDN_RESD_CODE,
      SGBSTDN_EXP_GRAD_DATE,
      SGBSTDN_STYP_DESC,
      SGBSTDN_LEVL_DESC,
      SGBSTDN_CLAS_DESC,
      SGBSTDN_DEPT_DESC,
      SGBSTDN_MAJR_DESC,
      SGBSTDN_MINR_1_DESC,
      SGBSTDN_MINR_1_2_DESC,
      SGBSTDN_CONC_DESC,
      SGBSTDN_DEGC_DESC,
      SGBSTDN_RESD_DESC,
      STVCLAS_SURROGATE_ID

  FROM
      SPAIDEN SPRIDEN
      LEFT OUTER JOIN SPAPERS SPBPERS ON SPBPERS.SPBPERS_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN GOARACE GORPRAC ON GORPRAC.GORPRAC_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SOREMAL GOREMAL ON GOREMAL.GOREMAL_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SGASTDN SGBSTDN ON SGBSTDN.SGBSTDN_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN STVCLAS STVCLAS ON STVCLAS.STVCLAS_CODE = SGBSTDN_CLAS_CODE

  WHERE
      SGBSTDN_TERM_CODE_EFF = FY_SGBSTDN_EFF_TERM(SPRIDEN_PIDM, :select_term_code.STVTERM_CODE)
  ),

STUDENT_DEMO_LIST as
(
  SELECT
      CASE
        WHEN SPBPERS_SEX IS NULL THEN 0
          ELSE 1
            END as SEX_Measure,
      CASE
        WHEN GORRACE_RACE_CDE IS NULL THEN 0
          ELSE 1
            END as RACE_Measure,
      CASE
        WHEN SPBPERS_ETHN_CDE IS NULL THEN 0
          ELSE 1
            END as ETHN_Measure,
      CASE
        WHEN SGBSTDN_MAJR_CODE_1 IS NULL THEN 0
          ELSE 1
            END as POS_Measure,
      CASE
        WHEN SGBSTDN_DEGC_CODE_1 IS NULL THEN 0
          ELSE 1
            END as DEGC_Measure,
      CASE
        WHEN SGBSTDN_STYP_CODE IS NULL THEN 0
          ELSE 1
            END as STYP_Measure,
      CASE
        WHEN SGBSTDN_LEVL_CODE IS NULL THEN 0
          ELSE 1
            END as LEVL_Measure,
      CASE
        WHEN SGBSTDN_CLAS_CODE IS NULL THEN 0
          ELSE 1
            END as CLAS_Measure,
      SPRIDEN_PIDM,
      SPRIDEN_ID,
      SPRIDEN_LAST_NAME,
      SPRIDEN_FIRST_NAME,
      SPRIDEN_MI,
      SPRIDEN_LEGAL_NAME,
      SPRIDEN_SEARCH_LAST_NAME,
      SPRIDEN_SEARCH_FIRST_NAME,
      SPRIDEN_SEARCH_MI,
      SPBPERS_PREF_FIRST_NAME,
      SPBPERS_AGE,
      SPBPERS_SEX,
      GORRACE_RACE_CDE,
      GORRACE_DESC,
      SPBPERS_ETHN_CDE,
      SPBPERS_ETHN_DESC,
      SPBPERS_SICAS_HISP_ORIGIN,
      SPBPERS_CITZ_CODE,
      SPBPERS_CITZ_COUNTRY,
      GOBINTL_NATN_CODE_BIRTH,
      GOBINTL_BIRTH_NATN,
      GOBTPAC_EXTERNAL_USER,
      GORADID_ADDITIONAL_ID,
      GOREMAL_EMAIL_ADDRESS,
      GOREMAL_EMAL_CODE,
      SFRTHST_TMST_CODE,
      SFRTHST_TMST_DESC,
      SGBSTDN_TERM_CODE_EFF,
      SGBSTDN_STST_CODE,
      SGBSTDN_STYP_CODE,
      SGBSTDN_LEVL_CODE,
      SGBSTDN_CLAS_CODE,
      SGBSTDN_DEPT_CODE,
      SGBSTDN_MAJR_CODE_1,
      SGBSTDN_MAJR_CODE_MINR_1,
      SGBSTDN_MAJR_CODE_MINR_1_2,
      SGBSTDN_MAJR_CODE_CONC_1,
      SGBSTDN_DEGC_CODE_1,
      SGBSTDN_RESD_CODE,
      SGBSTDN_EXP_GRAD_DATE,
      SGBSTDN_STYP_DESC,
      SGBSTDN_LEVL_DESC,
      SGBSTDN_CLAS_DESC,
      SGBSTDN_DEPT_DESC,
      SGBSTDN_MAJR_DESC,
      SGBSTDN_MINR_1_DESC,
      SGBSTDN_MINR_1_2_DESC,
      SGBSTDN_CONC_DESC,
      SGBSTDN_DEGC_DESC,
      SGBSTDN_RESD_DESC,
      STVCLAS_SURROGATE_ID

  FROM
      SPAIDEN SPRIDEN
      LEFT OUTER JOIN SPAPERS SPBPERS ON SPBPERS.SPBPERS_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN GOARACE GORPRAC ON GORPRAC.GORPRAC_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SOREMAL GOREMAL ON GOREMAL.GOREMAL_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SGASTDN SGBSTDN ON SGBSTDN.SGBSTDN_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN STVCLAS STVCLAS ON STVCLAS.STVCLAS_CODE = SGBSTDN_CLAS_CODE

  WHERE
      SGBSTDN_TERM_CODE_EFF = FY_SGBSTDN_EFF_TERM(SPRIDEN_PIDM, :select_term_code.STVTERM_CODE)
  ),

STUDENT_ADRTELE as
(
  SELECT
      SPRIDEN_PIDM,
      SPRIDEN_ID,
      SPRIDEN_LAST_NAME,
      SPRIDEN_FIRST_NAME,
      SPRIDEN_MI,
      SPRIDEN_LEGAL_NAME,
      SPRIDEN_SEARCH_LAST_NAME,
      SPRIDEN_SEARCH_FIRST_NAME,
      SPRIDEN_SEARCH_MI,
      SPBPERS_PREF_FIRST_NAME,
      SPBPERS_AGE,
      SPBPERS_SEX,
      SPRADDR_PIDM,
      SPRADDR_ATYP_CODE,
      SPRADDR_ATYP_DESC,
      SPRADDR_FROM_DATE,
      SPRADDR_TO_DATE,
      SPRADDR_STREET_LINE1,
      SPRADDR_STREET_LINE2,
      SPRADDR_STREET_LINE3,
      SPRADDR_CITY,
      SPRADDR_STAT_CODE,
      SPRADDR_ZIP,
      SPRTELE_PIDM,
      SPRTELE_TELE_CODE,
      SPRTELE_TELE_DESC,
      SPRTELE_PHONE_AREA,
      SPRTELE_PHONE_NUMBER,
      SPREMRG_PIDM,
      SPREMRG_LAST_NAME,
      SPREMRG_FIRST_NAME,
      SPREMRG_MI,
      SPREMRG_RELT_CODE,
      SPREMRG_RELT_DESC,
      SPREMRG_PRIORITY,
      SPREMRG_STREET_LINE1,
      SPREMRG_STREET_LINE2,
      SPREMRG_STREET_LINE3,
      SPREMRG_CITY,
      SPREMRG_STAT_CODE,
      SPREMRG_NATN_CODE,
      SPREMRG_ZIP,
      SPREMRG_PHONE_AREA,
      SPREMRG_PHONE_NUMBER,
      SPREMRG_PHONE_EXT,
      SPREMRG_ACTIVITY_DATE,
      SPREMRG_ATYP_CODE,
      SPREMRG_HOUSE_NUMBER

  FROM
      STUDENT_DEMO_LIST A
      LEFT OUTER JOIN TUIADDR SPRADDR ON SPRADDR.SPRADDR_PIDM = SPRIDEN_PIDM
            -- AND SPRADDR.SPRADDR_ATYP_CODE = '&ATYP'
      LEFT OUTER JOIN SPATELE SPRTELE ON SPRTELE.SPRTELE_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SPAEMRG SPREMRG ON SPREMRG.SPREMRG_PIDM = SPRIDEN_PIDM

  WHERE
      (SPREMRG_PRIORITY <= 1 OR SPREMRG_PRIORITY IS NULL)
  ),

ADVISING_LIST_DEMO as
(
  SELECT
      CASE
        WHEN SPBPERS_SEX IS NULL THEN 0
          ELSE 1
            END as SEX_Measure,
      CASE
        WHEN GORRACE_RACE_CDE IS NULL THEN 0
          ELSE 1
            END as RACE_Measure,
      CASE
        WHEN SPBPERS_ETHN_CDE IS NULL THEN 0
          ELSE 1
            END as ETHN_Measure,
      CASE
        WHEN SGBSTDN_DEPT_CODE IS NULL THEN 0
          ELSE 1
            END as DEPT_Measure,
      CASE
        WHEN SGBSTDN_MAJR_CODE_1 IS NULL THEN 0
          ELSE 1
            END as POS_Measure,
      CASE
        WHEN SGBSTDN_DEGC_CODE_1 IS NULL THEN 0
          ELSE 1
            END as DEGC_Measure,
      CASE
        WHEN SGBSTDN_STYP_CODE IS NULL THEN 0
          ELSE 1
            END as STYP_Measure,
      CASE
        WHEN SGBSTDN_LEVL_CODE IS NULL THEN 0
          ELSE 1
            END as LEVL_Measure,
      CASE
        WHEN SGBSTDN_CLAS_CODE IS NULL THEN 0
          ELSE 1
            END as CLAS_Measure,
      SPRIDEN_PIDM,
      SPRIDEN_ID,
      SPRIDEN_LAST_NAME,
      SPRIDEN_FIRST_NAME,
      SPRIDEN_MI,
      SPRIDEN_LEGAL_NAME,
      SPRIDEN_SEARCH_LAST_NAME,
      SPRIDEN_SEARCH_FIRST_NAME,
      SPRIDEN_SEARCH_MI,
      SPBPERS_PREF_FIRST_NAME,
      SPBPERS_AGE,
      SPBPERS_SEX,
      GORRACE_RACE_CDE,
      GORRACE_DESC,
      SPBPERS_ETHN_CDE,
      SPBPERS_ETHN_DESC,
      SPBPERS_SICAS_HISP_ORIGIN,
      SPBPERS_CITZ_CODE,
      SPBPERS_CITZ_COUNTRY,
      GOBINTL_NATN_CODE_BIRTH,
      GOBINTL_BIRTH_NATN,
      GOBTPAC_EXTERNAL_USER,
      GORADID_ADDITIONAL_ID,
      GOREMAL_EMAIL_ADDRESS,
      GOREMAL_EMAL_CODE,
      SFRTHST_TMST_CODE,
      SFRTHST_TMST_DESC,
      SGBSTDN_TERM_CODE_EFF,
      SGBSTDN_STST_CODE,
      SGBSTDN_STYP_CODE,
      SGBSTDN_LEVL_CODE,
      SGBSTDN_CLAS_CODE,
      SGBSTDN_DEPT_CODE,
      SGBSTDN_MAJR_CODE_1,
      SGBSTDN_MAJR_CODE_MINR_1,
      SGBSTDN_MAJR_CODE_MINR_1_2,
      SGBSTDN_MAJR_CODE_CONC_1,
      SGBSTDN_DEGC_CODE_1,
      SGBSTDN_RESD_CODE,
      SGBSTDN_EXP_GRAD_DATE,
      SGBSTDN_STYP_DESC,
      SGBSTDN_LEVL_DESC,
      SGBSTDN_CLAS_DESC,
      SGBSTDN_DEPT_DESC,
      SGBSTDN_MAJR_DESC,
      SGBSTDN_MINR_1_DESC,
      SGBSTDN_MINR_1_2_DESC,
      SGBSTDN_CONC_DESC,
      SGBSTDN_DEGC_DESC,
      SGBSTDN_RESD_DESC,
      SHRTGPA_HOURS_ATTEMPTED,
      SHRTGPA_HOURS_EARNED,
      SHRTGPA_GPA_HOURS,
      SHRTGPA_QUALITY_POINTS,
      trunc(SHRTGPA_GPA,3) as SHRTGPA_GPA,
      SHRLGPA_HOURS_ATTEMPTED,
      SHRLGPA_HOURS_EARNED,
      SHRLGPA_GPA_HOURS,
      SHRLGPA_QUALITY_POINTS,
      trunc(SHRLGPA_GPA,3) as SHRLGPA_GPA,
      SHRTTRM_TERM_CODE,
      SHRTTRM_RECORD_STATUS_DATE,
      SHRTTRM_ASTD_CODE_END_OF_TERM,
      SHRTTRM_ASTD_DESC_END_OF_TERM,
      SHRTTRM_ASTD_DATE_END_OF_TERM,
      SHRTTRM_ACTIVITY_DATE,
      SHRTTRM_ASTD_CODE_DL,
      SHRTTRM_ASTD_DESC_DL,
      SHRTTRM_ASTD_DATE_DL,
      SHRTTRM_WRSN_CODE,
      SHRTTRM_WRSN_DESC,
      SGRADVR.SGRADVR_PIDM,
      SGRADVR.SGRADVR_ADVR_PIDM,
      SGRADVR.SGRADVR_ADVR_NAME,
      SGRADVR.SGRADVR_NAME,
      SGRADVR.SGRADVR_ADVR_DESC,
      SGRADVR.SGRADVR_TERM_CODE_EFF,
      (SELECT GOREMAL_EMAIL_ADDRESS
      FROM    GOREMAL
      WHERE   GOREMAL_PIDM = SGRADVR.SGRADVR_ADVR_PIDM
      AND     GOREMAL_EMAL_CODE = 'SU') as SGRADVR_ADVR_EMAIL

  FROM
      SPAIDEN SPRIDEN
      LEFT OUTER JOIN SPAPERS SPBPERS ON SPBPERS.SPBPERS_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN GOARACE GORPRAC ON GORPRAC.GORPRAC_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SOREMAL GOREMAL ON GOREMAL.GOREMAL_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SGASTDN SGBSTDN ON SGBSTDN.SGBSTDN_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SHAGPAR SHRTGPA ON SHRTGPA.SHRLGPA_PIDM = SPRIDEN_PIDM
           AND SHRTGPA_LEVL_CODE = SGBSTDN_LEVL_CODE
           AND SHRLGPA_LEVL_CODE = SGBSTDN_LEVL_CODE
      LEFT OUTER JOIN SHATERM SHRTTRM ON SHRTTRM.SHRTTRM_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SGAADVR SGRADVR ON SGRADVR.SGRADVR_PIDM = SPRIDEN_PIDM
           AND SGRADVR.SGRADVR_PRIM_IND = 'Y'
/*
           AND SGRADVR.SGRADVR_TERM_CODE_EFF = (SELECT MAX(SGRADVR_TERM_CODE_EFF)
                                               FROM    SGRADVR SGRADVRX
                                               WHERE   SGRADVRX.SGRADVR_PIDM = SGRADVR.SGRADVR_PIDM
                                               --AND     SGRADVRX.SGRADVR_SURROGATE_ID = SGRADVR.SGRADVR_SURROGATE_ID
                                               AND     SGRADVRX.SGRADVR_PRIM_IND = 'Y'
                                               AND     SGRADVRX.SGRADVR_TERM_CODE_EFF <= :Select_term_code.STVTERM_CODE)
           AND SGRADVR.SGRADVR_SURROGATE_ID = (SELECT MAX(SGRADVR_SURROGATE_ID)
                                              FROM     SGRADVR SGRADVRX
                                              WHERE    SGRADVRX.SGRADVR_PIDM = SGRADVR.SGRADVR_PIDM
                                              AND      SGRADVRX.SGRADVR_TERM_CODE_EFF = SGRADVR.SGRADVR_TERM_CODE_EFF
                                              AND      SGRADVRX.SGRADVR_PRIM_IND = 'Y')
*/

  WHERE
      SGBSTDN_TERM_CODE_EFF = FY_SGBSTDN_EFF_TERM(SPRIDEN_PIDM, :select_term_code.STVTERM_CODE)
  ),

ADVISING_ADRTELE as
(
  SELECT
      SPRIDEN_PIDM,
      SPRIDEN_ID,
      SPRIDEN_LAST_NAME,
      SPRIDEN_FIRST_NAME,
      SPRIDEN_MI,
      SPRIDEN_LEGAL_NAME,
      SPRIDEN_SEARCH_LAST_NAME,
      SPRIDEN_SEARCH_FIRST_NAME,
      SPRIDEN_SEARCH_MI,
      SPBPERS_PREF_FIRST_NAME,
      SPBPERS_AGE,
      SPBPERS_SEX,
      SPRADDR_PIDM,
      SPRADDR_ATYP_CODE,
      SPRADDR_ATYP_DESC,
      SPRADDR_FROM_DATE,
      SPRADDR_TO_DATE,
      SPRADDR_STREET_LINE1,
      SPRADDR_STREET_LINE2,
      SPRADDR_STREET_LINE3,
      SPRADDR_CITY,
      SPRADDR_STAT_CODE,
      SPRADDR_ZIP,
      SPRTELE_PIDM,
      SPRTELE_TELE_CODE,
      SPRTELE_TELE_DESC,
      SPRTELE_PHONE_AREA,
      SPRTELE_PHONE_NUMBER,
      SPREMRG_PIDM,
      SPREMRG_LAST_NAME,
      SPREMRG_FIRST_NAME,
      SPREMRG_MI,
      SPREMRG_RELT_CODE,
      SPREMRG_RELT_DESC,
      SPREMRG_PRIORITY,
      SPREMRG_STREET_LINE1,
      SPREMRG_STREET_LINE2,
      SPREMRG_STREET_LINE3,
      SPREMRG_CITY,
      SPREMRG_STAT_CODE,
      SPREMRG_NATN_CODE,
      SPREMRG_ZIP,
      SPREMRG_PHONE_AREA,
      SPREMRG_PHONE_NUMBER,
      SPREMRG_PHONE_EXT,
      SPREMRG_ACTIVITY_DATE,
      SPREMRG_ATYP_CODE,
      SPREMRG_HOUSE_NUMBER

  FROM
      ADVISING_LIST_DEMO A
      LEFT OUTER JOIN TUIADDR SPRADDR ON SPRADDR.SPRADDR_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SPATELE SPRTELE ON SPRTELE.SPRTELE_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SPAEMRG SPREMRG ON SPREMRG.SPREMRG_PIDM = SPRIDEN_PIDM

  WHERE
      (SPREMRG_PRIORITY <= 1 OR SPREMRG_PRIORITY IS NULL)
  ),

GRADUATED_LIST as
(
  SELECT
      SPRIDEN_PIDM,
      SPRIDEN_ID,
      SPRIDEN_LAST_NAME,
      SPRIDEN_FIRST_NAME,
      SPRIDEN_MI,
      SPRIDEN_LEGAL_NAME,
      SPRIDEN_SEARCH_LAST_NAME,
      SPRIDEN_SEARCH_FIRST_NAME,
      SPRIDEN_SEARCH_MI,
      SPBPERS_PREF_FIRST_NAME,
      SPBPERS_AGE,
      SPBPERS_SEX,
      GORRACE_RACE_CDE,
      GORRACE_DESC,
      SPBPERS_ETHN_CDE,
      SPBPERS_ETHN_DESC,
      SPBPERS_SICAS_HISP_ORIGIN,
      SPBPERS_CITZ_CODE,
      SPBPERS_CITZ_COUNTRY,
      GOBINTL_NATN_CODE_BIRTH,
      GOBINTL_BIRTH_NATN,
      GOBTPAC_EXTERNAL_USER,
      GORADID_ADDITIONAL_ID,
      GOREMAL_EMAIL_ADDRESS,
      GOREMAL_EMAL_CODE,
      SHRDGMR_SEQ_NO,
      SHRDGMR_DEGC_CODE,
      SHRDGMR_DEGS_CODE,
      SHRDGMR_LEVL_CODE,
      SHRDGMR_COLL_CODE_1,
      SHRDGMR_MAJR_CODE_1,
      SHRDGMR_MAJR_CODE_MINR_1,
      SHRDGMR_MAJR_CODE_CONC_1,
      SHRDGMR_APPL_DATE,
      SHRDGMR_GRAD_DATE,
      SHRDGMR_ACYR_CODE_BULLETIN,
      SHRDGMR_CAMP_CODE,
      SHRDGMR_TERM_CODE_GRAD,
      SHRDGMR_ACYR_CODE,
      SHRDGMR_TERM_CODE_STUREC,
      SHRDGMR_ACTIVITY_DATE,
      SHRDGMR_GRST_CODE,
      SHRDGMR_TERM_CODE_COMPLETED,
      SHRDGMR_DEPT_CODE,
      SHRDGMR_PROGRAM,
      SHRDGMR_SURROGATE_ID,
      SHRDGMR_VERSION,
      SHRDGMR_DEGS_DESC,
      SHRDGMR_DEGC_DESC,
      SHRDGMR_LEVL_DESC,
      SHRDGMR_MAJR_DESC,
      SHRDGMR_GRST_DESC,
      SHRTGPA_HOURS_ATTEMPTED,
      SHRTGPA_HOURS_EARNED,
      SHRTGPA_GPA_HOURS,
      SHRTGPA_QUALITY_POINTS,
      trunc(SHRTGPA_GPA,3) as SHRTGPA_GPA,
      SHRLGPA_HOURS_ATTEMPTED,
      SHRLGPA_HOURS_EARNED,
      SHRLGPA_GPA_HOURS,
      SHRLGPA_QUALITY_POINTS,
      trunc(SHRLGPA_GPA,3) as SHRLGPA_GPA,
      SHRTTRM_TERM_CODE,
      SHRTTRM_RECORD_STATUS_DATE,
      SHRTTRM_ASTD_CODE_END_OF_TERM,
      SHRTTRM_ASTD_DESC_END_OF_TERM,
      SHRTTRM_ASTD_DATE_END_OF_TERM,
      SHRTTRM_ACTIVITY_DATE,
      SHRTTRM_ASTD_CODE_DL,
      SHRTTRM_ASTD_DESC_DL,
      SHRTTRM_ASTD_DATE_DL,
      SHRTTRM_WRSN_CODE,
      SHRTTRM_WRSN_DESC

  FROM
      SPAIDEN SPRIDEN
      LEFT OUTER JOIN SPAPERS SPBPERS ON SPBPERS.SPBPERS_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN GOARACE GORPRAC ON GORPRAC.GORPRAC_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SOREMAL GOREMAL ON GOREMAL.GOREMAL_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SHADEGR SHRDGMR ON SHRDGMR.SHRDGMR_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SHAGPAR SHRTGPA ON SHRTGPA.SHRLGPA_PIDM = SPRIDEN_PIDM
           AND SHRTGPA_LEVL_CODE = SHRDGMR_LEVL_CODE
           AND SHRLGPA_LEVL_CODE = SHRDGMR_LEVL_CODE
      LEFT OUTER JOIN SHATERM SHRTTRM ON SHRTTRM.SHRTTRM_PIDM = SPRIDEN_PIDM
  ),

GRADUATED_LIST_DEMO as
(
  SELECT
      CASE
        WHEN SPBPERS_SEX IS NULL THEN 0
          ELSE 1
            END as SEX_Measure,
      CASE
        WHEN GORRACE_RACE_CDE IS NULL THEN 0
          ELSE 1
            END as RACE_Measure,
      CASE
        WHEN SPBPERS_ETHN_CDE IS NULL THEN 0
          ELSE 1
            END as ETHN_Measure,
     CASE
        WHEN SHRDGMR_DEPT_CODE IS NULL THEN 0
          ELSE 1
            END as DEPT_Measure,
     CASE
        WHEN SHRDGMR_MAJR_CODE_1 IS NULL THEN 0
          ELSE 1
            END as POS_Measure,
      CASE
        WHEN SHRDGMR_DEGC_CODE IS NULL THEN 0
          ELSE 1
            END as DEGC_Measure,
      CASE
        WHEN SHRDGMR_DEGS_CODE IS NULL THEN 0
          ELSE 1
            END as DEGS_Measure,
      CASE
        WHEN SHRDGMR_LEVL_CODE IS NULL THEN 0
          ELSE 1
            END as LEVL_Measure,
      CASE
        WHEN SHRDGMR_ACYR_CODE IS NULL THEN 0
          ELSE 1
            END as ACYR_Measure,
      SPRIDEN_PIDM,
      SPRIDEN_ID,
      SPRIDEN_LAST_NAME,
      SPRIDEN_FIRST_NAME,
      SPRIDEN_MI,
      SPRIDEN_LEGAL_NAME,
      SPRIDEN_SEARCH_LAST_NAME,
      SPRIDEN_SEARCH_FIRST_NAME,
      SPRIDEN_SEARCH_MI,
      SPBPERS_PREF_FIRST_NAME,
      SPBPERS_AGE,
      SPBPERS_SEX,
      GORRACE_RACE_CDE,
      GORRACE_DESC,
      SPBPERS_ETHN_CDE,
      SPBPERS_ETHN_DESC,
      SPBPERS_SICAS_HISP_ORIGIN,
      SPBPERS_CITZ_CODE,
      SPBPERS_CITZ_COUNTRY,
      GOBINTL_NATN_CODE_BIRTH,
      GOBINTL_BIRTH_NATN,
      GOBTPAC_EXTERNAL_USER,
      GORADID_ADDITIONAL_ID,
      GOREMAL_EMAIL_ADDRESS,
      GOREMAL_EMAL_CODE,
      SHRDGMR_SEQ_NO,
      SHRDGMR_DEGC_CODE,
      SHRDGMR_DEGS_CODE,
      SHRDGMR_LEVL_CODE,
      SHRDGMR_COLL_CODE_1,
      SHRDGMR_MAJR_CODE_1,
      SHRDGMR_MAJR_CODE_MINR_1,
      SHRDGMR_MAJR_CODE_CONC_1,
      SHRDGMR_APPL_DATE,
      SHRDGMR_GRAD_DATE,
      SHRDGMR_ACYR_CODE_BULLETIN,
      SHRDGMR_CAMP_CODE,
      SHRDGMR_TERM_CODE_GRAD,
      SHRDGMR_ACYR_CODE,
      SHRDGMR_TERM_CODE_STUREC,
      SHRDGMR_ACTIVITY_DATE,
      SHRDGMR_GRST_CODE,
      SHRDGMR_TERM_CODE_COMPLETED,
      SHRDGMR_DEPT_CODE,
      SHRDGMR_PROGRAM,
      SHRDGMR_SURROGATE_ID,
      SHRDGMR_VERSION,
      SHRDGMR_DEGS_DESC,
      SHRDGMR_DEGC_DESC,
      SHRDGMR_LEVL_DESC,
      SHRDGMR_MAJR_DESC,
      SHRDGMR_GRST_DESC,
      SHRTGPA_HOURS_ATTEMPTED,
      SHRTGPA_HOURS_EARNED,
      SHRTGPA_GPA_HOURS,
      SHRTGPA_QUALITY_POINTS,
      trunc(SHRTGPA_GPA,3) as SHRTGPA_GPA,
      SHRLGPA_HOURS_ATTEMPTED,
      SHRLGPA_HOURS_EARNED,
      SHRLGPA_GPA_HOURS,
      SHRLGPA_QUALITY_POINTS,
      trunc(SHRLGPA_GPA,3) as SHRLGPA_GPA,
      SHRTTRM_TERM_CODE,
      SHRTTRM_RECORD_STATUS_DATE,
      SHRTTRM_ASTD_CODE_END_OF_TERM,
      SHRTTRM_ASTD_DESC_END_OF_TERM,
      SHRTTRM_ASTD_DATE_END_OF_TERM,
      SHRTTRM_ACTIVITY_DATE,
      SHRTTRM_ASTD_CODE_DL,
      SHRTTRM_ASTD_DESC_DL,
      SHRTTRM_ASTD_DATE_DL,
      SHRTTRM_WRSN_CODE,
      SHRTTRM_WRSN_DESC

  FROM
      SPAIDEN SPRIDEN
      LEFT OUTER JOIN SPAPERS SPBPERS ON SPBPERS.SPBPERS_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN GOARACE GORPRAC ON GORPRAC.GORPRAC_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SOREMAL GOREMAL ON GOREMAL.GOREMAL_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SHADEGR SHRDGMR ON SHRDGMR.SHRDGMR_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SHAGPAR SHRTGPA ON SHRTGPA.SHRLGPA_PIDM = SPRIDEN_PIDM
           AND SHRTGPA_LEVL_CODE = SHRDGMR_LEVL_CODE
           AND SHRLGPA_LEVL_CODE = SHRDGMR_LEVL_CODE
      LEFT OUTER JOIN SHATERM SHRTTRM ON SHRTTRM.SHRTTRM_PIDM = SPRIDEN_PIDM
  ),

GRADUATED_ADRTELE as
(
  SELECT
      SPRIDEN_PIDM,
      SPRIDEN_ID,
      SPRIDEN_LAST_NAME,
      SPRIDEN_FIRST_NAME,
      SPRIDEN_MI,
      SPRIDEN_LEGAL_NAME,
      SPRIDEN_SEARCH_LAST_NAME,
      SPRIDEN_SEARCH_FIRST_NAME,
      SPRIDEN_SEARCH_MI,
      SPBPERS_PREF_FIRST_NAME,
      SPBPERS_AGE,
      SPBPERS_SEX,
      SPRADDR_PIDM,
      SPRADDR_ATYP_CODE,
      SPRADDR_ATYP_DESC,
      SPRADDR_FROM_DATE,
      SPRADDR_TO_DATE,
      SPRADDR_STREET_LINE1,
      SPRADDR_STREET_LINE2,
      SPRADDR_STREET_LINE3,
      SPRADDR_CITY,
      SPRADDR_STAT_CODE,
      SPRADDR_ZIP,
      SPRTELE_PIDM,
      SPRTELE_TELE_CODE,
      SPRTELE_TELE_DESC,
      SPRTELE_PHONE_AREA,
      SPRTELE_PHONE_NUMBER,
      SPREMRG_PIDM,
      SPREMRG_LAST_NAME,
      SPREMRG_FIRST_NAME,
      SPREMRG_MI,
      SPREMRG_RELT_CODE,
      SPREMRG_RELT_DESC,
      SPREMRG_PRIORITY,
      SPREMRG_STREET_LINE1,
      SPREMRG_STREET_LINE2,
      SPREMRG_STREET_LINE3,
      SPREMRG_CITY,
      SPREMRG_STAT_CODE,
      SPREMRG_NATN_CODE,
      SPREMRG_ZIP,
      SPREMRG_PHONE_AREA,
      SPREMRG_PHONE_NUMBER,
      SPREMRG_PHONE_EXT,
      SPREMRG_ACTIVITY_DATE,
      SPREMRG_ATYP_CODE,
      SPREMRG_HOUSE_NUMBER

  FROM
      GRADUATED_LIST_DEMO A
      LEFT OUTER JOIN TUIADDR SPRADDR ON SPRADDR.SPRADDR_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SPATELE SPRTELE ON SPRTELE.SPRTELE_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SPAEMRG SPREMRG ON SPREMRG.SPREMRG_PIDM = SPRIDEN_PIDM

  WHERE
      (SPREMRG_PRIORITY <= 1 OR SPREMRG_PRIORITY IS NULL)
  ),

WITHDRAWN_LIST_DEMO as
(
  SELECT
      CASE
        WHEN SPBPERS_SEX IS NULL THEN 0
          ELSE 1
            END as SEX_Measure,
      CASE
        WHEN GORRACE_RACE_CDE IS NULL THEN 0
          ELSE 1
            END as RACE_Measure,
      CASE
        WHEN SPBPERS_ETHN_CDE IS NULL THEN 0
          ELSE 1
            END as ETHN_Measure,
      CASE
        WHEN SGBSTDN_DEPT_CODE IS NULL THEN 0
          ELSE 1
            END as DEPT_Measure,
      CASE
        WHEN SGBSTDN_MAJR_CODE_1 IS NULL THEN 0
          ELSE 1
            END as POS_Measure,
      CASE
        WHEN SGBSTDN_DEGC_CODE_1 IS NULL THEN 0
          ELSE 1
            END as DEGC_Measure,
      CASE
        WHEN SGBSTDN_STYP_CODE IS NULL THEN 0
          ELSE 1
            END as STYP_Measure,
      CASE
        WHEN SGBSTDN_LEVL_CODE IS NULL THEN 0
          ELSE 1
            END as LEVL_Measure,
      CASE
        WHEN SGBSTDN_CLAS_CODE IS NULL THEN 0
          ELSE 1
            END as CLAS_Measure,
      SPRIDEN_PIDM,
      SPRIDEN_ID,
      SPRIDEN_LAST_NAME,
      SPRIDEN_FIRST_NAME,
      SPRIDEN_MI,
      SPRIDEN_LEGAL_NAME,
      SPRIDEN_SEARCH_LAST_NAME,
      SPRIDEN_SEARCH_FIRST_NAME,
      SPRIDEN_SEARCH_MI,
      SPBPERS_PREF_FIRST_NAME,
      SPBPERS_AGE,
      SPBPERS_SEX,
      GORRACE_RACE_CDE,
      GORRACE_DESC,
      SPBPERS_ETHN_CDE,
      SPBPERS_ETHN_DESC,
      SPBPERS_SICAS_HISP_ORIGIN,
      SPBPERS_CITZ_CODE,
      SPBPERS_CITZ_COUNTRY,
      GOBINTL_NATN_CODE_BIRTH,
      GOBINTL_BIRTH_NATN,
      GOBTPAC_EXTERNAL_USER,
      GORADID_ADDITIONAL_ID,
      GOREMAL_EMAIL_ADDRESS,
      GOREMAL_EMAL_CODE,
      SFRTHST_TMST_CODE,
      SFRTHST_TMST_DESC,
      SGBSTDN_TERM_CODE_EFF,
      SGBSTDN_STST_CODE,
      SGBSTDN_STYP_CODE,
      SGBSTDN_LEVL_CODE,
      SGBSTDN_CLAS_CODE,
      SGBSTDN_DEPT_CODE,
      SGBSTDN_MAJR_CODE_1,
      SGBSTDN_MAJR_CODE_MINR_1,
      SGBSTDN_MAJR_CODE_MINR_1_2,
      SGBSTDN_MAJR_CODE_CONC_1,
      SGBSTDN_DEGC_CODE_1,
      SGBSTDN_RESD_CODE,
      SGBSTDN_EXP_GRAD_DATE,
      SGBSTDN_STYP_DESC,
      SGBSTDN_LEVL_DESC,
      SGBSTDN_CLAS_DESC,
      SGBSTDN_DEPT_DESC,
      SGBSTDN_MAJR_DESC,
      SGBSTDN_MINR_1_DESC,
      SGBSTDN_MINR_1_2_DESC,
      SGBSTDN_CONC_DESC,
      SGBSTDN_DEGC_DESC,
      SGBSTDN_RESD_DESC,
      SHRTGPA_HOURS_ATTEMPTED,
      SHRTGPA_HOURS_EARNED,
      SHRTGPA_GPA_HOURS,
      SHRTGPA_QUALITY_POINTS,
      trunc(SHRTGPA_GPA,3) as SHRTGPA_GPA,
      SHRLGPA_HOURS_ATTEMPTED,
      SHRLGPA_HOURS_EARNED,
      SHRLGPA_GPA_HOURS,
      SHRLGPA_QUALITY_POINTS,
      trunc(SHRLGPA_GPA,3) as SHRLGPA_GPA,
      SHRTTRM_TERM_CODE,
      SHRTTRM_RECORD_STATUS_DATE,
      SHRTTRM_ASTD_CODE_END_OF_TERM,
      SHRTTRM_ASTD_DESC_END_OF_TERM,
      SHRTTRM_ASTD_DATE_END_OF_TERM,
      SHRTTRM_ACTIVITY_DATE,
      SHRTTRM_ASTD_CODE_DL,
      SHRTTRM_ASTD_DESC_DL,
      SHRTTRM_ASTD_DATE_DL,
      SHRTTRM_WRSN_CODE,
      SHRTTRM_WRSN_DESC,
      SFRWDRL_PIDM,
      SFRWDRL_TERM_CODE,
      SFRWDRL_SEQ_NO,
      SFRWDRL_WDRL_CODE,
      SFRWDRL_EFF_WDRL_DATE,
      SFRWDRL_ESTS_CODE,
      SFRWDRL_ESTS_DATE,
      SFRWDRL_TIV_IND,
      SFRWDRL_PROCESSED_IND,
      SFRWDRL_ENRL_START_DATE,
      SFRWDRL_ENRL_END_DATE,
      SFRWDRL_ENRL_DAYS,
      SFRWDRL_ATTEND_DAYS,
      SFRWDRL_PERCENT_ATTEND,
      SFRWDRL_ORIGINAL_CHARGES,
      SFRWDRL_ACTIVITY_DATE,
      SFRWDRL_SURROGATE_ID,
      SFRWDRL_VERSION,
      SFRWDRL_ESTS_DESC,
      SGRADVR.SGRADVR_PIDM,
      SGRADVR.SGRADVR_ADVR_PIDM,
      SGRADVR.SGRADVR_ADVR_NAME,
      SGRADVR.SGRADVR_NAME,
      SGRADVR.SGRADVR_ADVR_DESC,
      SGRADVR.SGRADVR_TERM_CODE_EFF,
      (SELECT GOREMAL_EMAIL_ADDRESS
      FROM    GOREMAL
      WHERE   GOREMAL_PIDM = SGRADVR.SGRADVR_ADVR_PIDM
      AND     GOREMAL_EMAL_CODE = 'SU') as SGRADVR_ADVR_EMAIL

  FROM
      SPAIDEN SPRIDEN
      LEFT OUTER JOIN SPAPERS SPBPERS ON SPBPERS.SPBPERS_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN GOARACE GORPRAC ON GORPRAC.GORPRAC_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SOREMAL GOREMAL ON GOREMAL.GOREMAL_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SGASTDN SGBSTDN ON SGBSTDN.SGBSTDN_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SHAGPAR SHRTGPA ON SHRTGPA.SHRLGPA_PIDM = SPRIDEN_PIDM
           AND SHRTGPA_LEVL_CODE = SGBSTDN_LEVL_CODE
           AND SHRLGPA_LEVL_CODE = SGBSTDN_LEVL_CODE
      LEFT OUTER JOIN SHATERM SHRTTRM ON SHRTTRM.SHRTTRM_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SGAADVR SGRADVR ON SGRADVR.SGRADVR_PIDM = SPRIDEN_PIDM
           AND SGRADVR.SGRADVR_PRIM_IND = 'Y'
      LEFT OUTER JOIN SFAWDRL SFRWDRL ON SFRWDRL.SFRWDRL_PIDM = SPRIDEN_PIDM
/*
           AND SGRADVR.SGRADVR_TERM_CODE_EFF = (SELECT MAX(SGRADVR_TERM_CODE_EFF)
                                               FROM    SGRADVR SGRADVRX
                                               WHERE   SGRADVRX.SGRADVR_PIDM = SGRADVR.SGRADVR_PIDM
                                               --AND     SGRADVRX.SGRADVR_SURROGATE_ID = SGRADVR.SGRADVR_SURROGATE_ID
                                               AND     SGRADVRX.SGRADVR_PRIM_IND = 'Y'
                                               AND     SGRADVRX.SGRADVR_TERM_CODE_EFF <= :Select_term_code.STVTERM_CODE)
           AND SGRADVR.SGRADVR_SURROGATE_ID = (SELECT MAX(SGRADVR_SURROGATE_ID)
                                              FROM     SGRADVR SGRADVRX
                                              WHERE    SGRADVRX.SGRADVR_PIDM = SGRADVR.SGRADVR_PIDM
                                              AND      SGRADVRX.SGRADVR_TERM_CODE_EFF = SGRADVR.SGRADVR_TERM_CODE_EFF
                                              AND      SGRADVRX.SGRADVR_PRIM_IND = 'Y')
*/

  WHERE
      SGBSTDN_TERM_CODE_EFF = FY_SGBSTDN_EFF_TERM(SPRIDEN_PIDM, :select_term_code.STVTERM_CODE)
      --AND GOREMAL.GOREMAL_EMAL_CODE = 'SU'
  ),

WITHDRAWN_ADRTELE as
(
  SELECT
      SPRIDEN_PIDM,
      SPRIDEN_ID,
      SPRIDEN_LAST_NAME,
      SPRIDEN_FIRST_NAME,
      SPRIDEN_MI,
      SPRIDEN_LEGAL_NAME,
      SPRIDEN_SEARCH_LAST_NAME,
      SPRIDEN_SEARCH_FIRST_NAME,
      SPRIDEN_SEARCH_MI,
      SPBPERS_PREF_FIRST_NAME,
      SPBPERS_AGE,
      SPBPERS_SEX,
      SPRADDR_PIDM,
      SPRADDR_ATYP_CODE,
      SPRADDR_ATYP_DESC,
      SPRADDR_FROM_DATE,
      SPRADDR_TO_DATE,
      SPRADDR_STREET_LINE1,
      SPRADDR_STREET_LINE2,
      SPRADDR_STREET_LINE3,
      SPRADDR_CITY,
      SPRADDR_STAT_CODE,
      SPRADDR_ZIP,
      SPRTELE_PIDM,
      SPRTELE_TELE_CODE,
      SPRTELE_TELE_DESC,
      SPRTELE_PHONE_AREA,
      SPRTELE_PHONE_NUMBER,
      SPREMRG_PIDM,
      SPREMRG_LAST_NAME,
      SPREMRG_FIRST_NAME,
      SPREMRG_MI,
      SPREMRG_RELT_CODE,
      SPREMRG_RELT_DESC,
      SPREMRG_PRIORITY,
      SPREMRG_STREET_LINE1,
      SPREMRG_STREET_LINE2,
      SPREMRG_STREET_LINE3,
      SPREMRG_CITY,
      SPREMRG_STAT_CODE,
      SPREMRG_NATN_CODE,
      SPREMRG_ZIP,
      SPREMRG_PHONE_AREA,
      SPREMRG_PHONE_NUMBER,
      SPREMRG_PHONE_EXT,
      SPREMRG_ACTIVITY_DATE,
      SPREMRG_ATYP_CODE,
      SPREMRG_HOUSE_NUMBER

  FROM
      WITHDRAWN_LIST_DEMO A
      LEFT OUTER JOIN TUIADDR SPRADDR ON SPRADDR.SPRADDR_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SPATELE SPRTELE ON SPRTELE.SPRTELE_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SPAEMRG SPREMRG ON SPREMRG.SPREMRG_PIDM = SPRIDEN_PIDM

  WHERE
      (SPREMRG_PRIORITY <= 1 OR SPREMRG_PRIORITY IS NULL)
  ),

ADMITTED_LIST_DEMO as
(
  SELECT
      CASE
        WHEN SPBPERS_SEX IS NULL THEN 0
          ELSE 1
            END as SEX_Measure,
      CASE
        WHEN GORRACE_RACE_CDE IS NULL THEN 0
          ELSE 1
            END as RACE_Measure,
      CASE
        WHEN SPBPERS_ETHN_CDE IS NULL THEN 0
          ELSE 1
            END as ETHN_Measure,
      CASE
        WHEN SARADAP_DEPT_CODE IS NULL THEN 0
          ELSE 1
            END as DEPT_Measure,
      CASE
        WHEN SARADAP_MAJR_CODE_1 IS NULL THEN 0
          ELSE 1
            END as POS_Measure,
      CASE
        WHEN SARADAP_DEGC_CODE_1 IS NULL THEN 0
          ELSE 1
            END as DEGC_Measure,
      CASE
        WHEN SARADAP_LEVL_CODE IS NULL THEN 0
          ELSE 1
            END as LEVL_Measure,
      CASE
        WHEN SARADAP_STYP_CODE IS NULL THEN 0
          ELSE 1
            END as STYP_Measure,
      CASE
        WHEN SARADAP_APST_CODE IS NULL THEN 0
          ELSE 1
            END as APST_Measure,
      CASE
        WHEN SARAPPD_APDC_CODE IS NULL THEN 0
          ELSE 1
            END as APDC_Measure,
      SPRIDEN_PIDM,
      SPRIDEN_ID,
      SPRIDEN_LAST_NAME,
      SPRIDEN_FIRST_NAME,
      SPRIDEN_MI,
      SPRIDEN_LEGAL_NAME,
      SPRIDEN_SEARCH_LAST_NAME,
      SPRIDEN_SEARCH_FIRST_NAME,
      SPRIDEN_SEARCH_MI,
      SPBPERS_PREF_FIRST_NAME,
      SPBPERS_AGE,
      SPBPERS_SEX,
      GORRACE_RACE_CDE,
      GORRACE_DESC,
      SPBPERS_ETHN_CDE,
      SPBPERS_ETHN_DESC,
      SPBPERS_SICAS_HISP_ORIGIN,
      SPBPERS_CITZ_CODE,
      SPBPERS_CITZ_COUNTRY,
      GOBINTL_NATN_CODE_BIRTH,
      GOBINTL_BIRTH_NATN,
      GOBTPAC_EXTERNAL_USER,
      GORADID_ADDITIONAL_ID,
      GOREMAL_EMAIL_ADDRESS,
      GOREMAL_EMAL_CODE,
      SARADAP_PIDM,
      SARADAP_TERM_CODE_ENTRY,
      SARADAP_APPL_NO,
      SARADAP_LEVL_CODE,
      SARADAP_APPL_DATE,
      SARADAP_APST_CODE,
      SARADAP_APST_DATE,
      SARADAP_MAINT_IND,
      SARADAP_ADMT_CODE,
      SARADAP_STYP_CODE,
      SARADAP_CAMP_CODE,
      SARADAP_COLL_CODE_1,
      SARADAP_DEGC_CODE_1,
      SARADAP_MAJR_CODE_1,
      SARADAP_RESD_CODE,
      SARADAP_ACTIVITY_DATE,
      SARADAP_DEPT_CODE,
      SARADAP_PROGRAM_1,
      SARADAP_TERM_CODE_CTLG_1,
      SARADAP_WEB_TRANS_NO,
      SARADAP_WEB_AMOUNT,
      SARADAP_WEB_RECEIPT_NUMBER,
      SARADAP_SURROGATE_ID,
      SARADAP_VERSION,
      SARAPPD_PIDM,
      SARAPPD_TERM_CODE_ENTRY,
      SARAPPD_APPL_NO,
      SARAPPD_SEQ_NO,
      SARAPPD_APDC_DATE,
      SARAPPD_APDC_CODE,
      SARAPPD_MAINT_IND,
      SARAPPD_ACTIVITY_DATE,
      SARAPPD_USER,
      SARAPPD_DATA_ORIGIN,
      SARAPPD_SURROGATE_ID,
      SARAPPD_VERSION,
      SARAPPD_USER_ID,
      SARAPPD_VPDI_CODE,
      SARAPPD_GUID,
      SARAPPD_DFE_ADMN_DECN_GUID,
      SARADAP_LEVL_DESC,
      SARADAP_APST_DESC,
      SARADAP_ADMT_DESC,
      SARADAP_STYP_DESC,
      SARADAP_CAMP_DESC,
      SARADAP_COLL_DESC,
      SARADAP_DEGC_DESC,
      SARADAP_MAJR_DESC,
      SARADAP_RESD_DESC,
      SARADAP_DEPT_DESC,
      SARAPPD_APDC_DESC,
      SORHSCH_SBGI_CODE,
      SORHSCH_GRADUATION_DATE,
      SORHSCH_GPA,
      SORHSCH_TRANS_RECV_DATE,
      SORHSCH_SGBI_DESC,
      SORHSCH_SURROGATE_ID,
      SORHSCH_VERSION

  FROM
      SPAIDEN SPRIDEN
      LEFT OUTER JOIN SPAPERS SPBPERS ON SPBPERS.SPBPERS_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN GOARACE GORPRAC ON GORPRAC.GORPRAC_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SOREMAL GOREMAL ON GOREMAL.GOREMAL_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SAAADMS SARADAP ON SARADAP.SARADAP_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN ROAHSCH SORHSCH ON SORHSCH_PIDM = SPRIDEN_PIDM

  WHERE
      SARADAP_TERM_CODE_ENTRY = :select_term_code.STVTERM_CODE
  ),

ADMITTED_ADRTELE as
(
  SELECT
      SPRIDEN_PIDM,
      SPRIDEN_ID,
      SPRIDEN_LAST_NAME,
      SPRIDEN_FIRST_NAME,
      SPRIDEN_MI,
      SPRIDEN_LEGAL_NAME,
      SPRIDEN_SEARCH_LAST_NAME,
      SPRIDEN_SEARCH_FIRST_NAME,
      SPRIDEN_SEARCH_MI,
      SPBPERS_PREF_FIRST_NAME,
      SPBPERS_AGE,
      SPBPERS_SEX,
      SPRADDR_PIDM,
      SPRADDR_ATYP_CODE,
      SPRADDR_ATYP_DESC,
      SPRADDR_FROM_DATE,
      SPRADDR_TO_DATE,
      SPRADDR_STREET_LINE1,
      SPRADDR_STREET_LINE2,
      SPRADDR_STREET_LINE3,
      SPRADDR_CITY,
      SPRADDR_STAT_CODE,
      SPRADDR_ZIP,
      SPRTELE_PIDM,
      SPRTELE_TELE_CODE,
      SPRTELE_TELE_DESC,
      SPRTELE_PHONE_AREA,
      SPRTELE_PHONE_NUMBER,
      SPREMRG_PIDM,
      SPREMRG_LAST_NAME,
      SPREMRG_FIRST_NAME,
      SPREMRG_MI,
      SPREMRG_RELT_CODE,
      SPREMRG_RELT_DESC,
      SPREMRG_PRIORITY,
      SPREMRG_STREET_LINE1,
      SPREMRG_STREET_LINE2,
      SPREMRG_STREET_LINE3,
      SPREMRG_CITY,
      SPREMRG_STAT_CODE,
      SPREMRG_NATN_CODE,
      SPREMRG_ZIP,
      SPREMRG_PHONE_AREA,
      SPREMRG_PHONE_NUMBER,
      SPREMRG_PHONE_EXT,
      SPREMRG_ACTIVITY_DATE,
      SPREMRG_ATYP_CODE,
      SPREMRG_HOUSE_NUMBER

  FROM
      ADMITTED_LIST_DEMO A
      LEFT OUTER JOIN TUIADDR SPRADDR ON SPRADDR.SPRADDR_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SPATELE SPRTELE ON SPRTELE.SPRTELE_PIDM = SPRIDEN_PIDM
      LEFT OUTER JOIN SPAEMRG SPREMRG ON SPREMRG.SPREMRG_PIDM = SPRIDEN_PIDM

  WHERE
      (SPREMRG_PRIORITY <= 1 OR SPREMRG_PRIORITY IS NULL)
  )

SELECT
    SPRIDEN_PIDM as Remove_From_Dashboard,
    STVTERM.STVTERM_DESC as TERM_DESC,
    SPRIDEN_ID as Banner_ID,
    SPBPERS_PREF_FIRST_NAME Pref_Fname,
    SPRIDEN_LEGAL_NAME as Student_Name,
    SPRIDEN_LAST_NAME as Last_Name,
    SPRIDEN_FIRST_NAME as First_Name,
    SPRIDEN_MI as MI,
    SPBPERS_AGE as Age,
    SPBPERS_SEX as Sex,
    GORRACE_RACE_CDE as Race,
    GORRACE_DESC as Race_Decc,
    SPBPERS_ETHN_CDE as Ethnicity,
    SPBPERS_ETHN_DESC as Ethn_Desc,
    SPBPERS_SICAS_HISP_ORIGIN as Hisp_Origin,
    SPBPERS_CITZ_CODE as Citizen,
    SPBPERS_CITZ_COUNTRY as Citizenship,
    GOBINTL_NATN_CODE_BIRTH as Natn_Code,
    GOBINTL_BIRTH_NATN as Birth_Natn,

-- APPLIED STUDENTS
    SARADAP_TERM_CODE_ENTRY as Appl_Term_Code,
    SARADAP_APPL_NO as Appl_No,
    SARADAP_LEVL_CODE as Appl_Levl,
    SARADAP_APPL_DATE as Appl_Date,
    SARADAP_APST_CODE as Appl_APST_Code,
    SARADAP_APST_DESC as Appl_APST_Desc,
    SARADAP_APST_DATE as Appl_APST_Date,
    SARADAP_MAINT_IND as Maintenance_Ind,
    SARADAP_ADMT_CODE as Appl_Admit_Code,
    SARADAP_STYP_CODE as Appl_Styp_Code,
    SARADAP_CAMP_CODE as Appl_Camp_Code,
    SARADAP_COLL_CODE_1 as Appl_Coll_Code,
    SARADAP_DEGC_CODE_1 as Appl_Degc_Code,
    SARADAP_MAJR_CODE_1 as Appl_Majr_Code,
    SARADAP_RESD_CODE as Appl_Residency,
    SARADAP_ACTIVITY_DATE as Activity_Date,
    SARADAP_DEPT_CODE as Appl_Dept_Code,
    SARADAP_PROGRAM_1 as Appl_Program,
    SARADAP_TERM_CODE_CTLG_1 as Appl_Term_Code_CTLG,
    SARADAP_WEB_TRANS_NO as Appl_Web_Trans_No,
    SARADAP_WEB_AMOUNT as Appl_Web_Amount,
    SARADAP_WEB_RECEIPT_NUMBER as Appl_Web_Receipt_Number,
    SARADAP_SURROGATE_ID,
    SARADAP_VERSION,
    SARADAP_LEVL_DESC as Appl_Levl_Desc,
    SARADAP_APST_DESC as Appl_APST_Desc,
    SARADAP_ADMT_DESC as Appl_ADMT_Desc,
    SARADAP_STYP_DESC as Appl_STYP_Desc,
    SARADAP_CAMP_DESC as Appl_CAMP_Desc,
    SARADAP_COLL_DESC as Appl_COLL_Desc,
    SARADAP_DEGC_DESC as Appl_DEGC_Desc,
    SARADAP_MAJR_DESC as Appl_MAJR_Desc,
    SARADAP_RESD_DESC as Appl_RESD_Desc,
    SARADAP_DEPT_DESC as Appl_DEPT_Desc,

-- APPLIED & DECISIONED
    SARAPPD_TERM_CODE_ENTRY as Decc_Term_Code,
    SARAPPD_APPL_NO as Decc_Appl_No,
    SARAPPD_SEQ_NO as Decc_Seq_No,
    SARAPPD_APDC_DATE as Decc_APDC_Date,
    SARAPPD_APDC_CODE as Decc_APDC_Code,
    SARAPPD_MAINT_IND as Maintenance_Ind,
    SARAPPD_ACTIVITY_DATE as Activity_Date,

    SARAPPD_USER as User_Name,
    SARAPPD_DATA_ORIGIN,
    SARAPPD_SURROGATE_ID,
    SARAPPD_VERSION,
    SARAPPD_USER_ID,
    SARAPPD_VPDI_CODE as Decc_VPDI_Code,
    SARAPPD_GUID,
    SARAPPD_DFE_ADMN_DECN_GUID,
    SARAPPD_APDC_DESC as Decc_APDC_Desc,

-- HS TRANSCRIPTS
    SORHSCH_SBGI_CODE as SGBI_CODE,
    SORHSCH_GRADUATION_DATE as HS_Grad_Date,
    SORHSCH_GPA as HS_GPA,
    SORHSCH_TRANS_RECV_DATE as Trans_Recv_Date,
    SORHSCH_SGBI_DESC as HS_Inst_Name,
    SORHSCH_SURROGATE_ID,
    SORHSCH_VERSION
/*
    SPRIDEN_SEARCH_LAST_NAME,
    SPRIDEN_SEARCH_FIRST_NAME,
    SPRIDEN_SEARCH_MI,
    SPRADDR_ATYP_CODE as Address_Type,
    SPRADDR_ATYP_DESC as Address_Desc,
    SPRADDR_FROM_DATE as Start_Date,
    SPRADDR_TO_DATE as End_Date,
    SPRADDR_STREET_LINE1 as Street_1,
    SPRADDR_STREET_LINE2 as Street_2,
    SPRADDR_STREET_LINE3 as Street_3,
    SPRADDR_CITY as City,
    SPRADDR_STAT_CODE as State,
    SPRADDR_ZIP as Zip,
    SPRTELE_TELE_CODE as Tele_Code,
    SPRTELE_TELE_DESC as Tele_Desc,

    SPRTELE_PHONE_AREA as Area,
    SPRTELE_PHONE_NUMBER as Phone,
    SPREMRG_LAST_NAME as EMRG_Last_Name,
    SPREMRG_FIRST_NAME as EMRG_First_Name,
    SPREMRG_MI as EMRG_MI,
    SPREMRG_RELT_CODE as EMRG_Relt_Code,
    SPREMRG_RELT_DESC as EMRG_Relt_Desc,
    SPREMRG_PRIORITY as EMRG_Priority,
    SPREMRG_STREET_LINE1 as EMRG_Street1,
    SPREMRG_STREET_LINE2 as EMRG_Street2,
    SPREMRG_STREET_LINE3 as EMRG_Street3,
    SPREMRG_CITY as EMRG_City,
    SPREMRG_STAT_CODE as EMRG_State,
    SPREMRG_NATN_CODE as EMRG_Nation,
    SPREMRG_ZIP as EMRG_Zip,
    SPREMRG_PHONE_AREA as EMRG_Area,
    SPREMRG_PHONE_NUMBER as EMRG_Phone,
    SPREMRG_PHONE_EXT as EMRG_Phone_Ext,
    SPREMRG_ACTIVITY_DATE as EMRG_Activity_Date,
    SPREMRG_ATYP_CODE as EMRG_Atyp_Code,
    SPREMRG_HOUSE_NUMBER as EMRG_House_Numb
*/
FROM
    ADMITTED_LIST_DEMO B
--    LEFT OUTER JOIN STVCLAS STVCLAS ON STVCLAS.STVCLAS_CODE = SGBSTDN_CLAS_CODE
    LEFT OUTER JOIN STVTERM STVTERM ON STVTERM.STVTERM_CODE = :select_term_code.STVTERM_CODE

WHERE
    NULL IS NULL
--    AND SARADAP_TERM_CODE_ENTRY = '&term'
--$addfilter

--$beginorder

ORDER BY
    1

--$endorder